<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Endpoint: /mobile/user/authenticated" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </SetupThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Load Access Token" enabled="true"/>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="auth0" elementType="Argument">
                <stringProp name="Argument.name">auth0</stringProp>
                <stringProp name="Argument.value">mcamt.eu.auth0.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="client_id" elementType="Argument">
                <stringProp name="Argument.name">client_id</stringProp>
                <stringProp name="Argument.value">tn47mNO4J4gySXDG3bhuc11miYI5Jgnh</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="client_secret" elementType="Argument">
                <stringProp name="Argument.name">client_secret</stringProp>
                <stringProp name="Argument.value">yeHHeL4UByjpj06Xb8xI-8Sqm0E7-rcgzY7TIPWZsAf1-t-aLJmYkIVVN1pYWKSb</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="audience" elementType="Argument">
                <stringProp name="Argument.name">audience</stringProp>
                <stringProp name="Argument.value">tn47mNO4J4gySXDG3bhuc11miYI5Jgnh</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">Nikitasha.Giriyan@capita.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="password" elementType="Argument">
                <stringProp name="Argument.name">password</stringProp>
                <stringProp name="Argument.value">Sybex101</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="uservar" elementType="Argument">
                <stringProp name="Argument.name">uservar</stringProp>
                <stringProp name="Argument.value">activeuser</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
            <collectionProp name="CookieManager.cookies"/>
            <boolProp name="CookieManager.clearEachIteration">true</boolProp>
            <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
          </CookieManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Initiate Login Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">code</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${client_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">https://oauth.pstmn.io/v1/callback</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                </elementProp>
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">openid</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">STATE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                </elementProp>
                <elementProp name="audience" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${audience}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">audience</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${auth0}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/authorize</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HtmlExtractor guiclass="HtmlExtractorGui" testclass="HtmlExtractor" testname="Extract state from hidden input" enabled="true">
              <stringProp name="HtmlExtractor.refname">state</stringProp>
              <stringProp name="HtmlExtractor.expr">input[name=state]</stringProp>
              <stringProp name="HtmlExtractor.attribute">value</stringProp>
              <stringProp name="HtmlExtractor.default">NOSTATE</stringProp>
              <boolProp name="HtmlExtractor.default_empty_value">false</boolProp>
              <stringProp name="HtmlExtractor.match_number">0</stringProp>
              <stringProp name="HtmlExtractor.extractor_impl"></stringProp>
            </HtmlExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Submit Login Form Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${state}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="action" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">default</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">action</stringProp>
                </elementProp>
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${auth0}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">u/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract authorisation code" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">URL</stringProp>
              <stringProp name="RegexExtractor.refname">authcode</stringProp>
              <stringProp name="RegexExtractor.regex">code=(.*?)&amp;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NOAUTHCODE</stringProp>
              <stringProp name="RegexExtractor.match_number">0</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Access Token Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">authorization_code</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">${client_id}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${client_secret}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                </elementProp>
                <elementProp name="code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${authcode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">code</stringProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">https://oauth.pstmn.io/v1/callback</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                </elementProp>
                <elementProp name="audience" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.value">http://fusion.amysybex.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">audience</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${auth0}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">oauth/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract ID_TOKEN" enabled="true">
              <stringProp name="TestPlan.comments">Extract ID_TOKEN from response (auth0 uses id token instead of access token for authentication)</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">id_token; access_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.id_token; $.access_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOVALUE; NOVALUE</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Set Token as global variable" enabled="true">
              <stringProp name="BeanShellAssertion.query">${__setProperty(${uservar}_id, ${id_token})};
${__setProperty(${uservar}, ${access_token})};
</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="RESET COOKIES FOR NEXT LOGIN PostProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import org.apache.jmeter.protocol.http.control.*
sampler.getCookieManager().getCookies().clear()</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ServerName" elementType="Argument">
            <stringProp name="Argument.name">ServerName</stringProp>
            <stringProp name="Argument.value">fieldsmart-q01.uksouth.cloudapp.azure.com</stringProp>
            <stringProp name="Argument.desc">Server Name of the QA Environment</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="AccXml" elementType="Argument">
            <stringProp name="Argument.name">AccXml</stringProp>
            <stringProp name="Argument.value">application/vnd.fieldsmart.call-response-1+xml</stringProp>
            <stringProp name="Argument.desc">Accept Encoding</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CTXml" elementType="Argument">
            <stringProp name="Argument.name">CTXml</stringProp>
            <stringProp name="Argument.value">application/vnd.fieldsmart.authentication-token-1+xml</stringProp>
            <stringProp name="Argument.desc">Content Type</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="AccJson" elementType="Argument">
            <stringProp name="Argument.name">AccJson</stringProp>
            <stringProp name="Argument.value">application/vnd.fieldsmart.call-response-1+json</stringProp>
            <stringProp name="Argument.desc">Accept Encoding</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CTJson" elementType="Argument">
            <stringProp name="Argument.name">CTJson</stringProp>
            <stringProp name="Argument.value">application/vnd.fieldsmart.authentication-token-1+json</stringProp>
            <stringProp name="Argument.desc">Content Type</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery"></stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties"></stringProp>
        <stringProp name="dataSource">JDBC_Connection</stringProp>
        <stringProp name="dbUrl">jdbc:sqlserver://sqlfg-web-q01-uksouth.database.windows.net;databaseName=fieldsmart;</stringProp>
        <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">F!3ld$m@rt123F!3ld$m@rt123</stringProp>
        <stringProp name="poolMax">0</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">fieldsmartqa</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/mobile/user/authenticated- ALL SCENARIOS Existing User (application/vnd.fieldsmart.call-response-1+xml)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 1 (Existing User- Valid Authentication Request) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          <stringProp name="TestPlan.comments">Valid Access id and id token</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Update HPCUsers Valid WG and Revoke Status - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">update HPCUsers set Revoked= &apos;0&apos; where usercode= &apos;Nikitasha&apos;;
update HPCUsers set WorkGroupCode = &apos;Team01-Mob&apos; where UserCode= &apos;Nikitasha&apos; ;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_3</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1 (Existing user-Request for Valid User/WG) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
	&lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.eyJuaWNrbmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuIiwibmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuQGNhcGl0YS5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLCJ1cGRhdGVkX2F0IjoiMjAyMS0xMS0xOVQwNzozNTo1MC4zMDhaIiwiaXNzIjoiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjExMjNjZDMwYWIwOWEwMDY4NDMwOGQ5IiwiYXVkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLCJpYXQiOjE2MzczMDczNTIsImV4cCI6MTY2ODg2NDk1Mn0.GYsf3xPLi44G8GJFSANeZM9VRJroE3RkJV0SiXzeUX8H2okiB3njDA_lnldRzsBQWp5Am-bDDU1BgSubvfFMeDI6S1UC6I0etwz7OULQCRe8xpPMQy326WBPb6cbpteWnU-imEGS8oQyxVmD506o8d7kgnX0DzvWG3V7s5fNCZVCcnO-J4vFlNs9jm-BnHUhiF5bYZBWkh2f5pWOmGqvjBe6aXCSih5N0q2Ilvvb0578thlayS7iZMsVuv5si2maft8QbKmFrieh0vYX3t5Y7OEqC5-rnHUMphS6ST7kzPx3hjCuQ0HI2YcobVRXMr3w3iKINtfFwXc_0dj4sXxIkw&lt;/identityToken&gt;&#xd;
	&#xd;
	&lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&lt;/inviteToken&gt;&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid Unrevoked User, nickname and Workgroup with a valid access token.</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${AccXml}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${CTXml}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  true" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 2 (Existing User- Valid Authentication Request Revoked user) - application/vnd.fieldsmart.call-response-1+xml" enabled="false">
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          <stringProp name="TestPlan.comments">Valid Access id and id token, but the user is revoked in the db</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Update HPCUsers Revoke User - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">update HPCUsers set Revoked= 1 where usercode= &apos;Nikitasha&apos;;
Select Revoked from HPCUsers where usercode= &apos;Nikitasha&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_1</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 2 (Existing user- Request for Valid User/WG with Revoked status) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.eyJuaWNrbmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuIiwibmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuQGNhcGl0YS5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLCJ1cGRhdGVkX2F0IjoiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwiaXNzIjoiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjExMjNjZDMwYWIwOWEwMDY4NDMwOGQ5IiwiYXVkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLCJpYXQiOjE2MzcyMTYxOTQsImV4cCI6MTYzNzU3NjE5NH0.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid Revoked User, nickname and Workgroup with a valid access token.</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${AccXml}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${CTXml}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  false" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="851094876">UserRevokedException</stringProp>
                <stringProp name="97196323">false</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The User Revoke status has not been validated.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 3 (Existing User- Invalid Authentication Request) -application/vnd.fieldsmart.call-response-1+xml" enabled="true">
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          <stringProp name="TestPlan.comments">invalid Access id and valid id token</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Update HPCUsers Valid WG and Revoke Status - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">update HPCUsers set Revoked= &apos;0&apos; where usercode= &apos;Nikitasha&apos;;
update HPCUsers set WorkGroupCode = &apos;Team01-Mob&apos; where UserCode= &apos;Nikitasha&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_4</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 3 (Invalid Authentication Request) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.eyJuaWNrbmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuIiwibmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuQGNhcGl0YS5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLCJ1cGRhdGVkX2F0IjoiMjAyMS0xMS0wOFQwNTowMzozOS42MTRaIiwiaXNzIjoiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjExMjNjZDMwYWIwOWEwMDY4NDMwOGQ5IiwiYXVkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLCJpYXQiOjE2MzYzNDc4MjIsImV4cCI6MTYzNjcwNzgyMn0.LJSv7GNRHQBNj6MJ5Mdw8OJu9xYn1pYIrqNuZ_NJb4LRGtoIMSL5u5GvkC8_cQ76E3pEweGos7WZi8qMH9Lt6w49BNARqdPisdUiIOOpEKFIc3YMdFCKFde7iCqyszx_vXexmzG3ETwfE8-N5yP2YV7wpbzOcRbOVHFBhs9WLXFYOCu19XJmiJzoRZAWXgqFfluU87oNW4898SpJHm1YX6Gi5dxIQ90aRI_RCY0g6iZtPfm6HEljBgBF7XcFIv9X7rW46-2oWv_dyFjX2-buIZz_h2fClRX1Wt4yDIHzK2XXk3rmlKwviSXyWdjE5PbxTNK6xGriIOWIxxETm9dq3w&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLsImNsaWVudF9pZCI6bnVsbH1dLCJjbGFpbXMiOlt7Indvcmtncm91cCI6IlRlYW0wMS1Nb2IiLCJ0eXBlIjpudWxsfV0sInJlc291cmNlcyI6W3siYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOm51bGx9LHsiYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOiJzZGZzZGYifV19fQoK.&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated?</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid Unrevoked User, nickname and Workgroup with an invalid access token.</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLsImNsaWVudF9pZCI6bnVsbH1dLCJjbGFpbXMiOlt7Indvcmtncm91cCI6IlRlYW0wMS1Nb2IiLCJ0eXBlIjpudWxsfV0sInJlc291cmNlcyI6W3siYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOm51bGx9LHsiYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOiJzZGZzZGYifV19fQoK.</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${AccXml}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${CTXml}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Authentication failure</stringProp>
              <stringProp name="Assertion.custom_message">The Authentication of the existing user was not verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/mobile/user/authenticated- ALL SCENARIOS New User (application/vnd.fieldsmart.call-response-1+xml)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 1(New User- Valid/ Invalid Requests) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
          <stringProp name="TestPlan.comments">Valid User, Invalid WG, Valid User with no id token, Valid user with no username, Valid user with incomplete id token, Valid user with no invite token</stringProp>
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
        </CriticalSectionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">${AccXml}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">${CTXml}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-fws-appCode</stringProp>
                <stringProp name="Header.value">WM</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Valid New User/WG - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          </CriticalSectionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Existing entry in HPCUsersAuth table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.1 (Request for Valid New User/WG)- application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIlRlc3RVc2VyMTgxMUBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&#xd;
&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Valid User, nickname and WG</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  true" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="TestPlan.comments">Valid Authentication Request ( Pass ) </stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete entries from HPCUsersAuth and HPCUsers table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;
delete from HPCUsers where Usercode like &apos;TestUser%&apos;;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Valid New User/WG ( db check- Username saved without special characters) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          </CriticalSectionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request- Delete Existing entry in HPCUsersAuth table" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.2 (Request for Valid New User/WG) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIlRlc3RVc2VyMTgxMUBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&#xd;
&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Valid User, nickname and WG</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  true" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="TestPlan.comments">Valid Authentication Request ( Pass ) </stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Fetch Username from HPCUsers Table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="query">select UserName from HPCUsers where UserCode= &apos;TestUser1811&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">Request_1</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion - Display error for invalid value (xml)" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (!ResponseCode.equals(&quot;200&quot;) || vars.getObject(&quot;Request_1&quot;).size() == 0) {

	FailureMessage = &quot;!!!!!!!!!!! No connection to the database or data not received !!!!!!!!!!!&quot;;
	Failure = true;	
	prev.setStopThread(true);
	
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="UserName : Dummy Sampler - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <boolProp name="WAITING">true</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
              <stringProp name="RESPONSE_DATA">{&quot;UserName&quot;:&quot;TestUser1811capitacom&quot;}</stringProp>
              <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
              <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
              <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
              <stringProp name="URL"></stringProp>
              <stringProp name="RESULT_CLASS">org.apache.jmeter.samplers.SampleResult</stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - Value of Username (xml)" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">UserNameFromApi</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;UserName&quot;:(.+?)}</stringProp>
                <stringProp name="RegexExtractor.template"></stringProp>
                <stringProp name="RegexExtractor.default">null</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion - Compare Expected with Actual username (xml)" enabled="true">
                <stringProp name="BeanShellAssertion.query">boolean comparisonResult = false;

for (int i; i &lt; vars.getObject(&quot;Request_1&quot;).size(); i++) {	   

	if (vars.getObject(&quot;Request_1&quot;).get(i).get(&quot;UserName&quot;).equals(${UserNameFromApi_g1})) {

		comparisonResult = true;	
		SampleResult= &quot;The result matches&quot;	;
	}	   
}

if (!comparisonResult) {
	
	FailureMessage = &quot;!!!!!!!!!!! Test failed !!!!!!!!!!!&quot;;
	Failure = true;	
	prev.setStopThread(true);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">The comparison was unsuccessful.</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete entries from HPCUsersAuth and HPCUsers table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;
delete from HPCUsers where Usercode like &apos;TestUser%&apos;;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Valid New User/WG( db check- Username size 40 chars in HPCUsers Table) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          </CriticalSectionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Existing entry in HPCUsersAuth table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.3 (Request for Valid New User/WG) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIlRlc3RVc2VyMTBUZXN0VXNlcjEwVGVzdFVzZXIxMFRlc3RVc2VyMTAxIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.GYsf3xPLi44G8GJFSANeZM9VRJroE3RkJV0SiXzeUX8H2okiB3njDA_lnldRzsBQWp5Am-bDDU1BgSubvfFMeDI6S1UC6I0etwz7OULQCRe8xpPMQy326WBPb6cbpteWnU-imEGS8oQyxVmD506o8d7kgnX0DzvWG3V7s5fNCZVCcnO-J4vFlNs9jm-BnHUhiF5bYZBWkh2f5pWOmGqvjBe6aXCSih5N0q2Ilvvb0578thlayS7iZMsVuv5si2maft8QbKmFrieh0vYX3t5Y7OEqC5-rnHUMphS6ST7kzPx3hjCuQ0HI2YcobVRXMr3w3iKINtfFwXc_0dj4sXxIkw&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&#xd;
&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Valid User, nickname and WG</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  true" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="TestPlan.comments">Valid Authentication Request ( Pass ) </stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Fetch Username from HPCUsers Table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="query">select UserName from HPCUsers where UserCode= &apos;TestUser1811&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">Request_1</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion - Error if field size exceeds 40 chars (xml)" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (vars.getObject(&quot;Request_1&quot;).size() &gt; 40) {

	FailureMessage = &quot;!!!!!!!!!!! Username field check failed !!!!!!!!!!!&quot;;
	Failure = true;	
	prev.setStopThread(true);
	
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete entries from HPCUsersAuth and HPCUsers table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;
delete from HPCUsers where Usercode like &apos;TestUser%&apos;;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Valid New User/WG (db check- Usercode 32 chars in HPCUsers Table) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          </CriticalSectionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Existing entry in HPCUsersAuth table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.4 (Request for Valid New User/WG) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjEwVGVzdFVzZXIxMFRlc3RVc2VyMTBUZXN0VXNlcjEwIiwKICAibmFtZSI6ICJUZXN0VXNlcjE4MTFAY2FwaXRhLmNvbSIsCiAgInBpY3R1cmUiOiAiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM/cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLAogICJ1cGRhdGVkX2F0IjogIjIwMjEtMTEtMThUMDY6MTY6MzAuODYwWiIsCiAgImlzcyI6ICJodHRwczovL21jYW10LmV1LmF1dGgwLmNvbS8iLAogICJzdWIiOiAiYXV0aDB8NjExMjNjZDMwdGUwOXMwMDY4NDMwOHQ5IiwKICAiYXVkIjogInRuNDdtTk80SjRneVNYREczYmh1YzExbWlZSTVKZ25oIiwKICAiaWF0IjogMTYzNzIxNjE5NCwKICAiZXhwIjogMTYzNzU3NjE5NAp9.GYsf3xPLi44G8GJFSANeZM9VRJroE3RkJV0SiXzeUX8H2okiB3njDA_lnldRzsBQWp5Am-bDDU1BgSubvfFMeDI6S1UC6I0etwz7OULQCRe8xpPMQy326WBPb6cbpteWnU-imEGS8oQyxVmD506o8d7kgnX0DzvWG3V7s5fNCZVCcnO-J4vFlNs9jm-BnHUhiF5bYZBWkh2f5pWOmGqvjBe6aXCSih5N0q2Ilvvb0578thlayS7iZMsVuv5si2maft8QbKmFrieh0vYX3t5Y7OEqC5-rnHUMphS6ST7kzPx3hjCuQ0HI2YcobVRXMr3w3iKINtfFwXc_0dj4sXxIkw&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&#xd;
&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Valid User, nickname and WG</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  true" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="TestPlan.comments">Valid Authentication Request ( Pass ) </stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Fetch Usercode from HPCUsers Table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="query">select UserCode from HPCUsers where UserName= &apos;TestUser1811capitacom&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">Request_1</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion - Error if field size exceeds 32 chars (xml)" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (vars.getObject(&quot;Request_1&quot;).size() &gt; 32) {

	FailureMessage = &quot;!!!!!!!!!!! Usercode field check failed !!!!!!!!!!!&quot;;
	Failure = true;	
	prev.setStopThread(true);
	
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete entries from HPCUsersAuth and HPCUsers table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;
delete from HPCUsers where Usercode like &apos;TestUser%&apos;;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Valid New User/WG ( db check- Check Entry in HPCUsers, HPCUsersAuth and SystemActivityLog Tables) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          </CriticalSectionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Existing entry in HPCUsersAuth table- application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.5 (Request for Valid New User/WG) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjEyMyIsCiAgIm5hbWUiOiAiVGVzdFVzZXIxMjNAY2FwaXRhLmNvbSIsCiAgInBpY3R1cmUiOiAiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM/cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLAogICJ1cGRhdGVkX2F0IjogIjIwMjEtMTEtMThUMDY6MTY6MzAuODYwWiIsCiAgImlzcyI6ICJodHRwczovL21jYW10LmV1LmF1dGgwLmNvbS8iLAogICJzdWIiOiAiYXV0aDB8NjExMjNjZDMwdGUwOXMwMDY4NDMwOHQ5IiwKICAiYXVkIjogInRuNDdtTk80SjRneVNYREczYmh1YzExbWlZSTVKZ25oIiwKICAiaWF0IjogMTYzNzIxNjE5NCwKICAiZXhwIjogMTYzNzU3NjE5NAp9.GYsf3xPLi44G8GJFSANeZM9VRJroE3RkJV0SiXzeUX8H2okiB3njDA_lnldRzsBQWp5Am-bDDU1BgSubvfFMeDI6S1UC6I0etwz7OULQCRe8xpPMQy326WBPb6cbpteWnU-imEGS8oQyxVmD506o8d7kgnX0DzvWG3V7s5fNCZVCcnO-J4vFlNs9jm-BnHUhiF5bYZBWkh2f5pWOmGqvjBe6aXCSih5N0q2Ilvvb0578thlayS7iZMsVuv5si2maft8QbKmFrieh0vYX3t5Y7OEqC5-rnHUMphS6ST7kzPx3hjCuQ0HI2YcobVRXMr3w3iKINtfFwXc_0dj4sXxIkw&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&#xd;
&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Valid User, nickname and WG</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  true" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="TestPlan.comments">Valid Authentication Request ( Pass ) </stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Fetch Usercode from HPCUsers Table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="query">select UserCode from HPCUsers where UserName= &apos;TestUser123capitacom&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">Request_1</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Error if field is empty - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (!ResponseCode.equals(&quot;200&quot;) || vars.getObject(&quot;Request_1&quot;).size() == 0) {

	FailureMessage = &quot;!!!!!!!!!!! Usercode field check failed !!!!!!!!!!!&quot;;
	Failure = true;	
	prev.setStopThread(true);
	
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Fetch Username from HPCUsers Table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="query">select UserName from HPCUsers where UserCode= &apos;TestUser123&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">Request_2</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="Error if field is empty - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (!ResponseCode.equals(&quot;200&quot;) || vars.getObject(&quot;Request_2&quot;).size() == 0) {

	FailureMessage = &quot;!!!!!!!!!!! Username field check failed !!!!!!!!!!!&quot;;
	Failure = true;	
	prev.setStopThread(true);
	
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Fetch LogDate from SystemActivityLog Table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="query">select LogDate from SystemActivityLog where UserCode= &apos;TestUser123&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">Request_3</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion - Error if field is empty (xml)" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (!ResponseCode.equals(&quot;200&quot;) || vars.getObject(&quot;Request_3&quot;).size() == 0) {

	FailureMessage = &quot;!!!!!!!!!!! SystemActivityLog table entry check failed !!!!!!!!!!!&quot;;
	Failure = true;	
	prev.setStopThread(true);
	
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete entries from HPCUsersAuth and HPCUsers table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;
delete from HPCUsers where Usercode like &apos;TestUser%&apos;;
delete from systemactivitylog where usercode like &apos;Testuser%&apos;;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.6 (Request for Invalid WG for new user) - application/vnd.fieldsmart.call-response-1+xml" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIlRlc3RVc2VyMTgxMUBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.ewogICJjZmciOiB7CiAgICAiYXV0aCI6IFsKICAgICAgewogICAgICAgICJhdXRob3JpdHlfdXJpIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgICAgICAgImlkIjogImRlZmF1bHQiLAogICAgICAgICJ0eXBlIjogIm9pZGMiLAogICAgICAgICJjbGllbnRfaWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiCiAgICAgIH0KICAgIF0sCiAgICAiY2xhaW1zIjogWwogICAgICB7CiAgICAgICAgIndvcmtncm91cCI6ICJUZXN0MTIzIiwKICAgICAgICAiaW52aXRlaWQiOiAiNzU2NWU5ODUtOTY1ZC00MmNkLWI0ODYtMWI4YmRkMjk4ODU1IiwKICAgICAgICAiZXhwaXJ5IjogMjAyMzAxMTIsCiAgICAgICAgInR5cGUiOiAidXNlci9pbmZvIgogICAgICB9CiAgICBdLAogICAgInJlc291cmNlcyI6IFsKICAgICAgewogICAgICAgICJhdXRoIjogWwogICAgICAgICAgImRlZmF1bHQiCiAgICAgICAgXSwKICAgICAgICAidHlwZSI6ICJ0ZW5hbnQiLAogICAgICAgICJ1cmkiOiAiaHR0cHM6Ly9maWVsZHNtYXJ0LXEwMS51a3NvdXRoLmNsb3VkYXBwLmF6dXJlLmNvbS9tb2JpbGUiCiAgICAgIH0KICAgIF0KICB9Cn0=.cINMNQKzRvQrGieBtZekKuJcsI5Y8knxocTeT46GBp1j-hfESB3ViJOfjS68-5k6yWzygEjVPPwadzMJesLOdO67hHjiJ5uR83bgV_6SVgw6RTG1CrZja0_lAY1WIU8Dj-Yy1pvC0ypItSP41MkOTJwh4j_yw3MvGm33YtgT-YXI3vC0ejo6SmPdSx4u4_YkPyHhuy97yy4A3_SGQYGshultzt58ShFweDNWT3I3gi8jQkZf4XIbSW26SC94PMOKzrkSCS61CdP6ME_UQ9l5WzsA0Pe7nK6bW28BJZDIL6M0PJtRhoZETz8rD_Sk9aczQHj7pLk27Epd_tsv2nKFTw&#xd;
&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid New user, nickname but invalid WG</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  false" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="97196323">false</stringProp>
                <stringProp name="-1067807720">InvalidWorkgroupException</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Invalid User WG has not been validated.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.7 (Request for Valid New User/WG with no id token) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, nickname and WG but no identity token provided</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The identity token details have not be validated.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.8 (Request for Valid New User/WG with blank username) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIiIsCiAgInBpY3R1cmUiOiAiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM/cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLAogICJ1cGRhdGVkX2F0IjogIjIwMjEtMTEtMThUMDY6MTY6MzAuODYwWiIsCiAgImlzcyI6ICJodHRwczovL21jYW10LmV1LmF1dGgwLmNvbS8iLAogICJzdWIiOiAiYXV0aDB8NjExMjNjZDMwdGUwOXMwMDY4NDMwOHQ5IiwKICAiYXVkIjogInRuNDdtTk80SjRneVNYREczYmh1YzExbWlZSTVKZ25oIiwKICAiaWF0IjogMTYzNzIxNjE5NCwKICAiZXhwIjogMTYzNzU3NjE5NAp9.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">No Username, but valid nickname and WG and incomplete  identity token provided</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.9 (Request for Valid New User/WG with blank usercode) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICIiLAogICJuYW1lIjogIlRlc3RVc2VyMTgxMUBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, no  nickname and valid WG but no usercode in the identity token provided</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.10 (Request for Valid New User/WG with no usercode) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewoJIm5hbWUiOiAiVGVzdFVzZXIxODExQGNhcGl0YS5jb20iLAoJInBpY3R1cmUiOiAiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM/cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLAoJInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKCSJpc3MiOiAiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwKCSJzdWIiOiAiYXV0aDB8NjExMjNjZDMwdGUwOXMwMDY4NDMwOHQ5IiwKCSJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAoJImlhdCI6IDE2MzcyMTYxOTQsCgkiZXhwIjogMTYzNzU3NjE5NAp9.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, no  nickname and valid WG but no usercode in the identity token provided</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.11 (Request for Valid New User/WG with no  username)- application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJwaWN0dXJlIjogImh0dHBzOi8vcy5ncmF2YXRhci5jb20vYXZhdGFyLzYxYjYzYmVmNTVjYmRmZTJiOGUwYTVhMzlhMTc0ZjJjP3M9NDgwJnI9cGcmZD1odHRwcyUzQSUyRiUyRmNkbi5hdXRoMC5jb20lMkZhdmF0YXJzJTJGbmkucG5nIiwKICAidXBkYXRlZF9hdCI6ICIyMDIxLTExLTE4VDA2OjE2OjMwLjg2MFoiLAogICJpc3MiOiAiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwKICAic3ViIjogImF1dGgwfDYxMTIzY2QzMHRlMDlzMDA2ODQzMDh0OSIsCiAgImF1ZCI6ICJ0bjQ3bU5PNEo0Z3lTWERHM2JodWMxMW1pWUk1SmduaCIsCiAgImlhdCI6IDE2MzcyMTYxOTQsCiAgImV4cCI6IDE2Mzc1NzYxOTQKfQ==.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">No Username, but valid nickname and WG and incomplete  identity token provided</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.12 (Request for Valid New User/WG no invite token)- application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIlRlc3RVc2VyMTgxMUBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated?</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, nickname and WG but no invite token</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Invite token details have not been validated.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 2 (New User- Unique User code Beyond 99) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          <stringProp name="TestPlan.comments">Valid Access id and id token, but a similar user exists in the db</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert first 0-9 Entries into HPCUsers tables - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;

DECLARE 
@MyCounter as varchar(100),
@testvalue as varchar(100)

SET @MyCounter = 0 ; 

WHILE @MyCounter &lt; 10 
 
 BEGIN

 set @testvalue = &apos;&apos;;
 if @MyCounter &gt; 0
 set @testvalue = &apos;0&apos;+ @MyCounter;

  /* INSERT INTO HPCUsersAuth ( UserCode, Subject, Issuer)
   VALUES (CONCAT(&apos;Testuser&apos;, @testvalue), CONCAT(&apos;auth0|6123cd30te09a0068430d&apos;, @MyCounter), &apos;https://mcamt.eu.auth0.com/&apos;);*/

   INSERT INTO HPCUsers( UserCode, UserName, AltRef, WorkGroupCode, DeviceID, Revoked, LastModDate, LastModTime, UserClass) 
   VALUES ( CONCAT(&apos;Testuser&apos;, @testvalue), CONCAT(&apos;testuser&apos;, @MyCounter), NULL, &apos;Team01-Mob&apos;, NULL, &apos;0&apos;, &apos;20211110&apos;, &apos;090353&apos;, NULL);
   
   /*INSERT INTO systemactivitylog (UserCode,LogDate,LogTime,AppCode, DeviceID, ActivityType, AdditionalText, TransFileName)
   VALUES ( CONCAT(&apos;Testuser&apos;, @testvalue), &apos;20211110&apos;, &apos;090353&apos; , &apos;WEBP&apos;, &apos;85.115.54.201&apos;, &apos;VIEW RESULT SET&apos;, &apos;&apos;, &apos;&apos;);*/
       
   SET @MyCounter = @MyCounter + 1;  
   
END</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_1</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">Insert entries for TUser into HPCUsers, Systemactivitylog and HPCUsersAuth tables</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert temp 10-99 Entries into HPCUsers tables - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DECLARE 
@MyCounter as varchar(100),
@testvalue as varchar(100)

SET @MyCounter = 10 ; 

WHILE @MyCounter &lt; 100
 
 BEGIN
 /*set @testvalue = &apos;&apos;;*/
 IF @MyCounter &gt;= 10  
 set @testvalue = @MyCounter;

  
   INSERT INTO HPCUsers( UserCode, UserName, AltRef, WorkGroupCode, DeviceID, Revoked, LastModDate, LastModTime, UserClass) 
   VALUES ( CONCAT(&apos;Testuser&apos;, @testvalue), CONCAT(&apos;testuser&apos;, @MyCounter), NULL, &apos;Team01-Mob&apos;, NULL, &apos;0&apos;, &apos;20211110&apos;, &apos;090353&apos;, NULL);
   
       
   SET @MyCounter = @MyCounter + 1;  

END</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_1</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">Insert entries for TUser into HPCUsers, Systemactivitylog and HPCUsersAuth tables</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 2 (Request to generate Unique User code Beyond 99) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0dXNlciIsCiAgIm5hbWUiOiAidGVzdHVzZXIiLAogICJwaWN0dXJlIjogImh0dHBzOi8vcy5ncmF2YXRhci5jb20vYXZhdGFyLzYxYjYzYmVmNTVjYmRmZTJiOGUwYTVhMzlhMTc0ZjJjP3M9NDgwJnI9cGcmZD1odHRwcyUzQSUyRiUyRmNkbi5hdXRoMC5jb20lMkZhdmF0YXJzJTJGbmkucG5nIiwKICAidXBkYXRlZF9hdCI6ICIyMDIxLTExLTE4VDA2OjE2OjMwLjg2MFoiLAogICJpc3MiOiAiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwKICAic3ViIjogImF1dGgwfDYxMTIzY2QzMHRlMDlzMDA2ODQzMDh0OSIsCiAgImF1ZCI6ICJ0bjQ3bU5PNEo0Z3lTWERHM2JodWMxMW1pWUk1SmduaCIsCiAgImlhdCI6IDE2MzcyMTYxOTQsCiAgImV4cCI6IDE2Mzc1NzYxOTQKfQ==.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&lt;/inviteToken&gt;&#xd;
    &#xd;
 &lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Similar username, usercode and WG as existing with valid id token amd invite token</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${AccXml}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${CTXml}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  false" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1759074127">InvalidUserCode</stringProp>
                <stringProp name="2043712549">Unable to generate a unique user Code</stringProp>
                <stringProp name="97196323">false</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The unique user record was not created.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete the manual and process added details in 3 tables  - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from HPCUsersAuth where usercode like &apos;Testuser%&apos;;
delete from HPCUsers where usercode like &apos;Testuser%&apos;;
delete from systemactivitylog where usercode like &apos;Testuser%&apos;;

insert into HPCUsersAuth values ( &apos;Nikitasha&apos;, &apos;auth0|61123cd30ab09a00684308d9&apos;, &apos;https://mcamt.eu.auth0.com/&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_1</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">Delete entries for TUser and TUser1 from HPCUsers, Systemactivitylog and HPCUsersAuth tables</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="select entries from HPCUsers Table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select usercode from HPCUsers where username like &apos;testuser%&apos;;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_1</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">Select entries for testuser in the HPCUsers table</stringProp>
          </JDBCSampler>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion - Error if field is empty (xml)" enabled="true">
              <stringProp name="BeanShellAssertion.query">if (vars.getObject(&quot;Request_1&quot;).size() &gt; 0) {

	FailureMessage = &quot;!!!!!!!!!!! the values have not been deleted !!!!!!!!!!!&quot;;
	Failure = true;	
	prev.setStopThread(true);
	
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 3 (New User- Invalid Authentication Request)- application/vnd.fieldsmart.call-response-1+xml" enabled="true">
          <stringProp name="TestPlan.comments">invalid Access id and valid id token</stringProp>
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
        </CriticalSectionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 3 (Invalid Authentication request for New User)- application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIlRlc3RVc2VyMTgxMUBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, nickname, WG but Invalid Access Token</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eAiOiJKV1QiLCJhbGciOiJub25lIn0.eyJjZmciOnsiYXV0aCI6W3sibG9naW5faGludCI6bnVsbCwiYXV0aG9yaXR5X3VyaSI6bnVsbCwiaWQiOm51bGwsInR5cGUiOm51bGwsImNsaWVudF9pZCI6bnVsbH1dLCJjbGFpbXMiOlt7Indvcmtncm91cCI6IlRlYW0wMS1Nb2IiLCJ0eXBlIjpudWxsfV0sInJlc291cmNlcyI6W3siYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOm51bGx9LHsiYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOiJzZGZzZGY.</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${AccXml}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${CTXml}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Authentication failure</stringProp>
              <stringProp name="Assertion.custom_message">The Authentication of the new user was not verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 4 (New User- Target WG Inactive) - application/vnd.fieldsmart.call-response-1+xml" enabled="false">
          <stringProp name="TestPlan.comments">Valid invite , id token but inactive WG</stringProp>
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Update HPCWorkgroups table to set WG to inactive - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;
update HPCWorkGroups set Active= &apos;0&apos; where WorkGroupCode = &apos;WGP1&apos;;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 3 (Request for Valid New User, WG Inactive) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjEyMzQiLAogICJuYW1lIjogIlRlc3RVc2VyMTIzNEBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.ewogICJjZmciOiB7CiAgICAiYXV0aCI6IFsKICAgICAgewogICAgICAgICJhdXRob3JpdHlfdXJpIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgICAgICAgImlkIjogImRlZmF1bHQiLAogICAgICAgICJ0eXBlIjogIm9pZGMiLAogICAgICAgICJjbGllbnRfaWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiCiAgICAgIH0KICAgIF0sCiAgICAiY2xhaW1zIjogWwogICAgICB7CiAgICAgICAgIndvcmtncm91cCI6ICJXR1AxIiwKICAgICAgICAiaW52aXRlaWQiOiAiNzU2NWU5ODUtOTY1ZC00MmNkLWI0ODYtMWI4YmRkMjk4ODU1IiwKICAgICAgICAiZXhwaXJ5IjogMjAyMzAxMTIsCiAgICAgICAgInR5cGUiOiAidXNlci9pbmZvIgogICAgICB9CiAgICBdLAogICAgInJlc291cmNlcyI6IFsKICAgICAgewogICAgICAgICJhdXRoIjogWwogICAgICAgICAgImRlZmF1bHQiCiAgICAgICAgXSwKICAgICAgICAidHlwZSI6ICJ0ZW5hbnQiLAogICAgICAgICJ1cmkiOiAiaHR0cHM6Ly9maWVsZHNtYXJ0LXEwMS51a3NvdXRoLmNsb3VkYXBwLmF6dXJlLmNvbS9tb2JpbGUiCiAgICAgIH0KICAgIF0KICB9Cn0=.cINMNQKzRvQrGieBtZekKuJcsI5Y8knxocTeT46GBp1j-hfESB3ViJOfjS68-5k6yWzygEjVPPwadzMJesLOdO67hHjiJ5uR83bgV_6SVgw6RTG1CrZja0_lAY1WIU8Dj-Yy1pvC0ypItSP41MkOTJwh4j_yw3MvGm33YtgT-YXI3vC0ejo6SmPdSx4u4_YkPyHhuy97yy4A3_SGQYGshultzt58ShFweDNWT3I3gi8jQkZf4XIbSW26SC94PMOKzrkSCS61CdP6ME_UQ9l5WzsA0Pe7nK6bW28BJZDIL6M0PJtRhoZETz8rD_Sk9aczQHj7pLk27Epd_tsv2nKFTw&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, nickname but WG is inactive</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${AccXml}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${CTXml}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  200" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1067807720">InvalidWorkgroupException</stringProp>
                <stringProp name="97196323">false</stringProp>
                <stringProp name="-797405632">Target Workgroup is inactive</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Invite token details have not been validated.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="TestPlan.comments">InvalidWorkgroupException</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Update HPCWorkgroups table to set WG to active - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">update HPCWorkGroups set Active= &apos;1&apos; where WorkGroupCode = &apos;WGP1&apos;;
insert into HPCUsersAuth values ( &apos;Nikitasha&apos;, &apos;auth0|61123cd30ab09a00684308d9&apos;, &apos;https://mcamt.eu.auth0.com/&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 5 (New User- Target WG Non Existent)- application/vnd.fieldsmart.call-response-1+xml" enabled="false">
          <stringProp name="TestPlan.comments">Valid invite , id token but  WG does not exist</stringProp>
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete unique user from HPCUsersAuth table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DELETE FROM HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;


</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 5 (Request for Valid New User where WG is non existent) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjEyMzQiLAogICJuYW1lIjogIlRlc3RVc2VyMTIzNEBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.ewogICJjZmciOiB7CiAgICAiYXV0aCI6IFsKICAgICAgewogICAgICAgICJhdXRob3JpdHlfdXJpIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgICAgICAgImlkIjogImRlZmF1bHQiLAogICAgICAgICJ0eXBlIjogIm9pZGMiLAogICAgICAgICJjbGllbnRfaWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiCiAgICAgIH0KICAgIF0sCiAgICAiY2xhaW1zIjogWwogICAgICB7CiAgICAgICAgIndvcmtncm91cCI6ICJUZXN0MTIzNDUiLAogICAgICAgICJpbnZpdGVpZCI6ICI3NTY1ZTk4NS05NjVkLTQyY2QtYjQ4Ni0xYjhiZGQyOTg4NTUiLAogICAgICAgICJleHBpcnkiOiAyMDIzMDExMiwKICAgICAgICAidHlwZSI6ICJ1c2VyL2luZm8iCiAgICAgIH0KICAgIF0sCiAgICAicmVzb3VyY2VzIjogWwogICAgICB7CiAgICAgICAgImF1dGgiOiBbCiAgICAgICAgICAiZGVmYXVsdCIKICAgICAgICBdLAogICAgICAgICJ0eXBlIjogInRlbmFudCIsCiAgICAgICAgInVyaSI6ICJodHRwczovL2ZpZWxkc21hcnQtcTAxLnVrc291dGguY2xvdWRhcHAuYXp1cmUuY29tL21vYmlsZSIKICAgICAgfQogICAgXQogIH0KfQ==.cINMNQKzRvQrGieBtZekKuJcsI5Y8knxocTeT46GBp1j-hfESB3ViJOfjS68-5k6yWzygEjVPPwadzMJesLOdO67hHjiJ5uR83bgV_6SVgw6RTG1CrZja0_lAY1WIU8Dj-Yy1pvC0ypItSP41MkOTJwh4j_yw3MvGm33YtgT-YXI3vC0ejo6SmPdSx4u4_YkPyHhuy97yy4A3_SGQYGshultzt58ShFweDNWT3I3gi8jQkZf4XIbSW26SC94PMOKzrkSCS61CdP6ME_UQ9l5WzsA0Pe7nK6bW28BJZDIL6M0PJtRhoZETz8rD_Sk9aczQHj7pLk27Epd_tsv2nKFTw&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, nickname but WG non-existant </stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${AccXml}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${CTXml}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  200" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1067807720">InvalidWorkgroupException</stringProp>
                <stringProp name="936475268">Target Workgroup does not exist</stringProp>
                <stringProp name="97196323">false</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Invite token details have not been validated.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert unique user from HPCUsersAuth table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">
insert into HPCUsersAuth values ( &apos;Nikitasha&apos;, &apos;auth0|61123cd30ab09a00684308d9&apos;, &apos;https://mcamt.eu.auth0.com/&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 6 (New User- Similar Usercode) - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          <stringProp name="TestPlan.comments">Valid Access id and id token, but a similar user exists in the db</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert temp Entries into HPCUsers table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;

insert into HPCUsers( UserCode, UserName, AltRef, WorkGroupCode, DeviceID, Revoked, LastModDate, LastModTime, UserClass) values ( &apos;TUser&apos;, &apos;testuser&apos;, NULL, &apos;Team01-Mob&apos;, NULL, &apos;0&apos;, &apos;20211110&apos;, &apos;090353&apos;, NULL);
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_1</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">Insert entries for TUser into HPCUsers, Systemactivitylog and HPCUsersAuth tables</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="New User generation for similar usercode passed- application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUVXNlciIsCiAgIm5hbWUiOiAidGVzdHVzZXIiLAogICJwaWN0dXJlIjogImh0dHBzOi8vcy5ncmF2YXRhci5jb20vYXZhdGFyLzYxYjYzYmVmNTVjYmRmZTJiOGUwYTVhMzlhMTc0ZjJjP3M9NDgwJnI9cGcmZD1odHRwcyUzQSUyRiUyRmNkbi5hdXRoMC5jb20lMkZhdmF0YXJzJTJGbmkucG5nIiwKICAidXBkYXRlZF9hdCI6ICIyMDIxLTExLTE4VDA2OjE2OjMwLjg2MFoiLAogICJpc3MiOiAiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwKICAic3ViIjogImF1dGgwfDYxMTIzY2QzMHRlMDlzMDA2ODQzMDh0OSIsCiAgImF1ZCI6ICJ0bjQ3bU5PNEo0Z3lTWERHM2JodWMxMW1pWUk1SmduaCIsCiAgImlhdCI6IDE2MzcyMTYxOTQsCiAgImV4cCI6IDE2Mzc1NzYxOTQKfQ==.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid Access id and id token, but a similar user exists in the db</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${AccXml}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${CTXml}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  200" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Similar records were not created.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete the manual and process added details in the table - application/vnd.fieldsmart.call-response-1+xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;
delete from HPCUsers where UserCode like &apos;TUser%&apos;;

insert into HPCUsersAuth values ( &apos;Nikitasha&apos;, &apos;auth0|61123cd30ab09a00684308d9&apos;, &apos;https://mcamt.eu.auth0.com/&apos;);
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_1</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">Delete entries for TUser and TUser1 from HPCUsers, Systemactivitylog and HPCUsersAuth tables</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/mobile/user/authenticated- ALL SCENARIOS Existing User (application/vnd.fieldsmart.call-response-1+json)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 1 (Existing User- Valid Authentication Request) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          <stringProp name="TestPlan.comments">Valid Access id and id token</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Update HPCUsers Valid WG and Revoke Status - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">update HPCUsers set Revoked= &apos;0&apos; where usercode= &apos;Nikitasha&apos;;
update HPCUsers set WorkGroupCode = &apos;Team01-Mob&apos; where UserCode= &apos;Nikitasha&apos; ;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_3</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1 (Request for Valid User/WG) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.eyJuaWNrbmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuIiwibmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuQGNhcGl0YS5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLCJ1cGRhdGVkX2F0IjoiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwiaXNzIjoiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjExMjNjZDMwYWIwOWEwMDY4NDMwOGQ5IiwiYXVkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLCJpYXQiOjE2MzcyMTYxOTQsImV4cCI6MTYzNzU3NjE5NH0.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid Unrevoked User, nickname and Workgroup with a valid access token.</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${AccJson}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${CTJson}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  true" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 2 (Existing User- Valid Authentication Request) - application/vnd.fieldsmart.call-response-1+json" enabled="false">
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          <stringProp name="TestPlan.comments">Valid Access id and id token, but the user is revoked in the db</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Update HPCUsers Revoke User- application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">update HPCUsers set Revoked= 1 where usercode= &apos;Nikitasha&apos;;
Select Revoked from HPCUsers where usercode= &apos;Nikitasha&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_1</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 2 (Request for Valid User/WG with Revoked status) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.eyJuaWNrbmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuIiwibmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuQGNhcGl0YS5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLCJ1cGRhdGVkX2F0IjoiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwiaXNzIjoiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjExMjNjZDMwYWIwOWEwMDY4NDMwOGQ5IiwiYXVkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLCJpYXQiOjE2MzcyMTYxOTQsImV4cCI6MTYzNzU3NjE5NH0.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid Revoked User, nickname and Workgroup with a valid access token.</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${AccJson}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${CTJson}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  false" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="97196323">false</stringProp>
                <stringProp name="851094876">UserRevokedException</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The User Revoke status has not been validated.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 3 (Existing User- Invalid Authentication Request) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          <stringProp name="TestPlan.comments">invalid Access id and valid id token</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Update HPCUsers Valid WG and Revoke Status - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">update HPCUsers set Revoked= &apos;0&apos; where usercode= &apos;Nikitasha&apos;;
update HPCUsers set WorkGroupCode = &apos;Team01-Mob&apos; where UserCode= &apos;Nikitasha&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_4</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 3 (Invalid Authentication Request) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.eyJuaWNrbmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuIiwibmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuQGNhcGl0YS5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLCJ1cGRhdGVkX2F0IjoiMjAyMS0xMS0wOFQwNTowMzozOS42MTRaIiwiaXNzIjoiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjExMjNjZDMwYWIwOWEwMDY4NDMwOGQ5IiwiYXVkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLCJpYXQiOjE2MzYzNDc4MjIsImV4cCI6MTYzNjcwNzgyMn0.LJSv7GNRHQBNj6MJ5Mdw8OJu9xYn1pYIrqNuZ_NJb4LRGtoIMSL5u5GvkC8_cQ76E3pEweGos7WZi8qMH9Lt6w49BNARqdPisdUiIOOpEKFIc3YMdFCKFde7iCqyszx_vXexmzG3ETwfE8-N5yP2YV7wpbzOcRbOVHFBhs9WLXFYOCu19XJmiJzoRZAWXgqFfluU87oNW4898SpJHm1YX6Gi5dxIQ90aRI_RCY0g6iZtPfm6HEljBgBF7XcFIv9X7rW46-2oWv_dyFjX2-buIZz_h2fClRX1Wt4yDIHzK2XXk3rmlKwviSXyWdjE5PbxTNK6xGriIOWIxxETm9dq3w&quot;&#xd;
&#xd;
&#xd;
    &quot;inviteToken&quot;:&quot;eyJ0eXAiOiJKV1QiLsImNsaWVudF9pZCI6bnVsbH1dLCJjbGFpbXMiOlt7Indvcmtncm91cCI6IlRlYW0wMS1Nb2IiLCJ0eXBlIjpudWxsfV0sInJlc291cmNlcyI6W3siYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOm51bGx9LHsiYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOiJzZGZzZGYifV19fQoK.&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated?</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid Unrevoked User, nickname and Workgroup with an invalid access token.</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLsImNsaWVudF9pZCI6bnVsbH1dLCJjbGFpbXMiOlt7Indvcmtncm91cCI6IlRlYW0wMS1Nb2IiLCJ0eXBlIjpudWxsfV0sInJlc291cmNlcyI6W3siYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOm51bGx9LHsiYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOiJzZGZzZGYifV19fQoK.</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${AccJson}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${CTJson}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Authentication failure</stringProp>
              <stringProp name="Assertion.custom_message">The Authentication of the existing user was not verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/mobile/user/authenticated- ALL SCENARIOS New User (application/vnd.fieldsmart.call-response-1+json)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 1 (New User- Valid/ Invalid Requests) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
          <stringProp name="TestPlan.comments">Valid User, Invalid WG, Valid User with no id token, Valid user with no username, Valid user with incomplete id token, Valid user with no invite token</stringProp>
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
        </CriticalSectionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-fws-appCode</stringProp>
                <stringProp name="Header.value">WM</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">${AccJson}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">${CTJson}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Valid New User/WG - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          </CriticalSectionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Existing entry in HPCUsersAuth table - application/vnd.fieldsmart.call-response-1+json" enabled="false">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.1 (Request for Valid New User/WG) - application/vnd.fieldsmart.call-response-1+json" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIlRlc3RVc2VyMTgxMUBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Valid User, nickname and WG</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  true" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="TestPlan.comments">Valid Authentication Request ( Pass ) </stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete entries from HPCUsersAuth and HPCUsers table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;
delete from HPCUsers where Usercode like &apos;TestUser%&apos;;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Valid New User/WG ( db check-Username saved without special characters)- application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          </CriticalSectionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Existing entry in HPCUsersAuth table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.2 (Request for Valid New User/WG) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIlRlc3RVc2VyMTgxMUBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Valid User, nickname and WG</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  true" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="TestPlan.comments">Valid Authentication Request ( Pass ) </stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Fetch Username from HPCUsers Table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="query">select UserName from HPCUsers where UserCode= &apos;TestUser1811&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">Request_1</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion - Display error for invalid value (json)" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (!ResponseCode.equals(&quot;200&quot;) || vars.getObject(&quot;Request_1&quot;).size() == 0) {

	FailureMessage = &quot;!!!!!!!!!!! No connection to the database or data not received !!!!!!!!!!!&quot;;
	Failure = true;	
	prev.setStopThread(true);
	
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Username Dummy Sampler - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <boolProp name="WAITING">true</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
              <stringProp name="RESPONSE_DATA">{&quot;UserName&quot;:&quot;TestUser1811capitacom&quot;}</stringProp>
              <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
              <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
              <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
              <stringProp name="URL"></stringProp>
              <stringProp name="RESULT_CLASS">org.apache.jmeter.samplers.SampleResult</stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - Value of Username - application/vnd.fieldsmart.call-response-1+json" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">UserNameFromApi</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;UserName&quot;:(.+?)}</stringProp>
                <stringProp name="RegexExtractor.template"></stringProp>
                <stringProp name="RegexExtractor.default">null</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion - Compare Expected with Actual username - application/vnd.fieldsmart.call-response-1+json" enabled="true">
                <stringProp name="BeanShellAssertion.query">boolean comparisonResult = false;

for (int i; i &lt; vars.getObject(&quot;Request_1&quot;).size(); i++) {	   

	if (vars.getObject(&quot;Request_1&quot;).get(i).get(&quot;UserName&quot;).equals(${UserNameFromApi_g1})) {

		comparisonResult = true;	
		SampleResult= &quot;The result matches&quot;	;
	}	   
}

if (!comparisonResult) {
	
	FailureMessage = &quot;!!!!!!!!!!! Test failed !!!!!!!!!!!&quot;;
	Failure = true;	
	prev.setStopThread(true);
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion- 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="49586">200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">The comparison was unsuccessful.</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">8</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete entries from HPCUsersAuth and HPCUsers table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;
delete from HPCUsers where Usercode like &apos;TestUser%&apos;;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Valid New User/WG ( db check - Username size 40 chars in HPCUsers Table) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          </CriticalSectionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Existing entry in HPCUsersAuth table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.3 (Request for Valid New User/WG) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIlRlc3RVc2VyMTBUZXN0VXNlcjEwVGVzdFVzZXIxMFRlc3RVc2VyMTAxIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.GYsf3xPLi44G8GJFSANeZM9VRJroE3RkJV0SiXzeUX8H2okiB3njDA_lnldRzsBQWp5Am-bDDU1BgSubvfFMeDI6S1UC6I0etwz7OULQCRe8xpPMQy326WBPb6cbpteWnU-imEGS8oQyxVmD506o8d7kgnX0DzvWG3V7s5fNCZVCcnO-J4vFlNs9jm-BnHUhiF5bYZBWkh2f5pWOmGqvjBe6aXCSih5N0q2Ilvvb0578thlayS7iZMsVuv5si2maft8QbKmFrieh0vYX3t5Y7OEqC5-rnHUMphS6ST7kzPx3hjCuQ0HI2YcobVRXMr3w3iKINtfFwXc_0dj4sXxIkw&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Valid User, nickname and WG</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  true" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="TestPlan.comments">Valid Authentication Request ( Pass ) </stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Fetch Username from HPCUsers Table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="query">select UserName from HPCUsers where UserCode= &apos;TestUser1811&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">Request_1</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion - Error if field size exceeds 40 chars (xml)" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (vars.getObject(&quot;Request_1&quot;).size() &gt; 40) {

	FailureMessage = &quot;!!!!!!!!!!! Username field check failed !!!!!!!!!!!&quot;;
	Failure = true;	
	prev.setStopThread(true);
	
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete entries from HPCUsersAuth and HPCUsers table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;
delete from HPCUsers where Usercode like &apos;TestUser%&apos;;

</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Valid New User/WG ( db check-Usercode 32 chars in HPCUsers Table) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          </CriticalSectionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Existing entry in HPCUsersAuth table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.4 (Request for Valid New User/WG) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjEwVGVzdFVzZXIxMFRlc3RVc2VyMTBUZXN0VXNlcjEwIiwKICAibmFtZSI6ICJUZXN0VXNlcjE4MTFAY2FwaXRhLmNvbSIsCiAgInBpY3R1cmUiOiAiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM/cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLAogICJ1cGRhdGVkX2F0IjogIjIwMjEtMTEtMThUMDY6MTY6MzAuODYwWiIsCiAgImlzcyI6ICJodHRwczovL21jYW10LmV1LmF1dGgwLmNvbS8iLAogICJzdWIiOiAiYXV0aDB8NjExMjNjZDMwdGUwOXMwMDY4NDMwOHQ5IiwKICAiYXVkIjogInRuNDdtTk80SjRneVNYREczYmh1YzExbWlZSTVKZ25oIiwKICAiaWF0IjogMTYzNzIxNjE5NCwKICAiZXhwIjogMTYzNzU3NjE5NAp9.GYsf3xPLi44G8GJFSANeZM9VRJroE3RkJV0SiXzeUX8H2okiB3njDA_lnldRzsBQWp5Am-bDDU1BgSubvfFMeDI6S1UC6I0etwz7OULQCRe8xpPMQy326WBPb6cbpteWnU-imEGS8oQyxVmD506o8d7kgnX0DzvWG3V7s5fNCZVCcnO-J4vFlNs9jm-BnHUhiF5bYZBWkh2f5pWOmGqvjBe6aXCSih5N0q2Ilvvb0578thlayS7iZMsVuv5si2maft8QbKmFrieh0vYX3t5Y7OEqC5-rnHUMphS6ST7kzPx3hjCuQ0HI2YcobVRXMr3w3iKINtfFwXc_0dj4sXxIkw&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Valid User, nickname and WG</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  true" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="TestPlan.comments">Valid Authentication Request ( Pass ) </stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Fetch Usercode from HPCUsers Table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="query">select UserCode from HPCUsers where UserName= &apos;TestUser1811capitacom&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">Request_1</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion - Error if field size exceeds 32 chars (xml)" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (vars.getObject(&quot;Request_1&quot;).size() &gt; 32) {

	FailureMessage = &quot;!!!!!!!!!!! Usercode field check failed !!!!!!!!!!!&quot;;
	Failure = true;	
	prev.setStopThread(true);
	
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete entries from HPCUsersAuth and HPCUsers table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;
delete from HPCUsers where Usercode like &apos;TestUser%&apos;;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Valid New User/WG ( db check- Check Entry in HPCUsers, HPCUsersAuth and SystemActivityLog Tables) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          </CriticalSectionController>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Existing entry in HPCUsersAuth table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.5 (Request for Valid New User/WG) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjEyMyIsCiAgIm5hbWUiOiAiVGVzdFVzZXIxMjNAY2FwaXRhLmNvbSIsCiAgInBpY3R1cmUiOiAiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM/cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLAogICJ1cGRhdGVkX2F0IjogIjIwMjEtMTEtMThUMDY6MTY6MzAuODYwWiIsCiAgImlzcyI6ICJodHRwczovL21jYW10LmV1LmF1dGgwLmNvbS8iLAogICJzdWIiOiAiYXV0aDB8NjExMjNjZDMwdGUwOXMwMDY4NDMwOHQ5IiwKICAiYXVkIjogInRuNDdtTk80SjRneVNYREczYmh1YzExbWlZSTVKZ25oIiwKICAiaWF0IjogMTYzNzIxNjE5NCwKICAiZXhwIjogMTYzNzU3NjE5NAp9.GYsf3xPLi44G8GJFSANeZM9VRJroE3RkJV0SiXzeUX8H2okiB3njDA_lnldRzsBQWp5Am-bDDU1BgSubvfFMeDI6S1UC6I0etwz7OULQCRe8xpPMQy326WBPb6cbpteWnU-imEGS8oQyxVmD506o8d7kgnX0DzvWG3V7s5fNCZVCcnO-J4vFlNs9jm-BnHUhiF5bYZBWkh2f5pWOmGqvjBe6aXCSih5N0q2Ilvvb0578thlayS7iZMsVuv5si2maft8QbKmFrieh0vYX3t5Y7OEqC5-rnHUMphS6ST7kzPx3hjCuQ0HI2YcobVRXMr3w3iKINtfFwXc_0dj4sXxIkw&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Valid User, nickname and WG</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  true" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
                <stringProp name="TestPlan.comments">Valid Authentication Request ( Pass ) </stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Fetch Usercode from HPCUsers Table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="query">select UserCode from HPCUsers where UserName= &apos;TestUser123capitacom&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">Request_1</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion - Error if field is empty (xml)" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (!ResponseCode.equals(&quot;200&quot;) || vars.getObject(&quot;Request_1&quot;).size() == 0) {

	FailureMessage = &quot;!!!!!!!!!!! Usercode field check failed !!!!!!!!!!!&quot;;
	Failure = true;	
	prev.setStopThread(true);
	
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Fetch Username from HPCUsers Table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="query">select UserName from HPCUsers where UserCode= &apos;TestUser123&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">Request_2</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion - Error if field is empty (xml)" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (!ResponseCode.equals(&quot;200&quot;) || vars.getObject(&quot;Request_2&quot;).size() == 0) {

	FailureMessage = &quot;!!!!!!!!!!! Username field check failed !!!!!!!!!!!&quot;;
	Failure = true;	
	prev.setStopThread(true);
	
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Fetch LogDate from SystemActivityLog Table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="query">select LogDate from SystemActivityLog where UserCode= &apos;TestUser123&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultVariable">Request_3</stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion - Error if field is empty (xml)" enabled="true">
                <stringProp name="BeanShellAssertion.query">if (!ResponseCode.equals(&quot;200&quot;) || vars.getObject(&quot;Request_3&quot;).size() == 0) {

	FailureMessage = &quot;!!!!!!!!!!! SystemActivityLog table entry check failed !!!!!!!!!!!&quot;;
	Failure = true;	
	prev.setStopThread(true);
	
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete entries from HPCUsersAuth and HPCUsers table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
              <stringProp name="dataSource">JDBC_Connection</stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;
delete from HPCUsers where Usercode like &apos;TestUser%&apos;;
delete from systemactivitylog where usercode like &apos;Testuser%&apos;;
</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="resultSetMaxRows"></stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.6 (Request for Invalid WG for new user) - application/vnd.fieldsmart.call-response-1+json" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIlRlc3RVc2VyMTgxMUBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.ewogICJjZmciOiB7CiAgICAiYXV0aCI6IFsKICAgICAgewogICAgICAgICJhdXRob3JpdHlfdXJpIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgICAgICAgImlkIjogImRlZmF1bHQiLAogICAgICAgICJ0eXBlIjogIm9pZGMiLAogICAgICAgICJjbGllbnRfaWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiCiAgICAgIH0KICAgIF0sCiAgICAiY2xhaW1zIjogWwogICAgICB7CiAgICAgICAgIndvcmtncm91cCI6ICJUZXN0MTIzIiwKICAgICAgICAiaW52aXRlaWQiOiAiNzU2NWU5ODUtOTY1ZC00MmNkLWI0ODYtMWI4YmRkMjk4ODU1IiwKICAgICAgICAiZXhwaXJ5IjogMjAyMzAxMTIsCiAgICAgICAgInR5cGUiOiAidXNlci9pbmZvIgogICAgICB9CiAgICBdLAogICAgInJlc291cmNlcyI6IFsKICAgICAgewogICAgICAgICJhdXRoIjogWwogICAgICAgICAgImRlZmF1bHQiCiAgICAgICAgXSwKICAgICAgICAidHlwZSI6ICJ0ZW5hbnQiLAogICAgICAgICJ1cmkiOiAiaHR0cHM6Ly9maWVsZHNtYXJ0LXEwMS51a3NvdXRoLmNsb3VkYXBwLmF6dXJlLmNvbS9tb2JpbGUiCiAgICAgIH0KICAgIF0KICB9Cn0=.cINMNQKzRvQrGieBtZekKuJcsI5Y8knxocTeT46GBp1j-hfESB3ViJOfjS68-5k6yWzygEjVPPwadzMJesLOdO67hHjiJ5uR83bgV_6SVgw6RTG1CrZja0_lAY1WIU8Dj-Yy1pvC0ypItSP41MkOTJwh4j_yw3MvGm33YtgT-YXI3vC0ejo6SmPdSx4u4_YkPyHhuy97yy4A3_SGQYGshultzt58ShFweDNWT3I3gi8jQkZf4XIbSW26SC94PMOKzrkSCS61CdP6ME_UQ9l5WzsA0Pe7nK6bW28BJZDIL6M0PJtRhoZETz8rD_Sk9aczQHj7pLk27Epd_tsv2nKFTw&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid New user, nickname but invalid WG</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  false" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="97196323">false</stringProp>
                <stringProp name="-1067807720">InvalidWorkgroupException</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Invalid User WG has not been validated.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.7 (Request for Valid New User/WG with no id token) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, nickname and WG but no identity token provided</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The identity token details have not be validated.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.8 (Request for Valid New User/WG with blank username)- application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIiIsCiAgInBpY3R1cmUiOiAiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM/cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLAogICJ1cGRhdGVkX2F0IjogIjIwMjEtMTEtMThUMDY6MTY6MzAuODYwWiIsCiAgImlzcyI6ICJodHRwczovL21jYW10LmV1LmF1dGgwLmNvbS8iLAogICJzdWIiOiAiYXV0aDB8NjExMjNjZDMwdGUwOXMwMDY4NDMwOHQ5IiwKICAiYXVkIjogInRuNDdtTk80SjRneVNYREczYmh1YzExbWlZSTVKZ25oIiwKICAiaWF0IjogMTYzNzIxNjE5NCwKICAiZXhwIjogMTYzNzU3NjE5NAp9.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">No Username, but valid nickname and WG and incomplete  identity token provided</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.9 (Request for Valid New User/WG with blank usercode) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICIiLAogICJuYW1lIjogIlRlc3RVc2VyMTgxMUBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, no  nickname and valid WG but no usercode in the identity token provided</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.10 (Request for Valid New User/WG with no usercode)- application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewoJIm5hbWUiOiAiVGVzdFVzZXIxODExQGNhcGl0YS5jb20iLAoJInBpY3R1cmUiOiAiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM/cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLAoJInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKCSJpc3MiOiAiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwKCSJzdWIiOiAiYXV0aDB8NjExMjNjZDMwdGUwOXMwMDY4NDMwOHQ5IiwKCSJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAoJImlhdCI6IDE2MzcyMTYxOTQsCgkiZXhwIjogMTYzNzU3NjE5NAp9.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated?</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, no  nickname and valid WG but no usercode</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.11 (Request for Valid New User/WG with no username) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJwaWN0dXJlIjogImh0dHBzOi8vcy5ncmF2YXRhci5jb20vYXZhdGFyLzYxYjYzYmVmNTVjYmRmZTJiOGUwYTVhMzlhMTc0ZjJjP3M9NDgwJnI9cGcmZD1odHRwcyUzQSUyRiUyRmNkbi5hdXRoMC5jb20lMkZhdmF0YXJzJTJGbmkucG5nIiwKICAidXBkYXRlZF9hdCI6ICIyMDIxLTExLTE4VDA2OjE2OjMwLjg2MFoiLAogICJpc3MiOiAiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwKICAic3ViIjogImF1dGgwfDYxMTIzY2QzMHRlMDlzMDA2ODQzMDh0OSIsCiAgImF1ZCI6ICJ0bjQ3bU5PNEo0Z3lTWERHM2JodWMxMW1pWUk1SmduaCIsCiAgImlhdCI6IDE2MzcyMTYxOTQsCiAgImV4cCI6IDE2Mzc1NzYxOTQKfQ==.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated?</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">No Username, but valid nickname and WG and incomplete  identity token provided</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 1.12 (Request for Valid New User/WG no invite token) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIlRlc3RVc2VyMTgxMUBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated?</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, nickname and WG but no invite token</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Invite token details have not been validated.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 2 (New User- Unique User code Beyond 99) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          <stringProp name="TestPlan.comments">Valid Access id and id token, but a similar user exists in the db</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert first 0-9 Entries into HPCUsers tables - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;

DECLARE 
@MyCounter as varchar(100),
@testvalue as varchar(100)

SET @MyCounter = 0 ; 

WHILE @MyCounter &lt; 10 
 
 BEGIN

 set @testvalue = &apos;&apos;;
 if @MyCounter &gt; 0
 set @testvalue = &apos;0&apos;+ @MyCounter;

  /* INSERT INTO HPCUsersAuth ( UserCode, Subject, Issuer)
   VALUES (CONCAT(&apos;Testuser&apos;, @testvalue), CONCAT(&apos;auth0|6123cd30te09a0068430d&apos;, @MyCounter), &apos;https://mcamt.eu.auth0.com/&apos;);*/

   INSERT INTO HPCUsers( UserCode, UserName, AltRef, WorkGroupCode, DeviceID, Revoked, LastModDate, LastModTime, UserClass) 
   VALUES ( CONCAT(&apos;Testuser&apos;, @testvalue), CONCAT(&apos;testuser&apos;, @MyCounter), NULL, &apos;Team01-Mob&apos;, NULL, &apos;0&apos;, &apos;20211110&apos;, &apos;090353&apos;, NULL);
   
   /*INSERT INTO systemactivitylog (UserCode,LogDate,LogTime,AppCode, DeviceID, ActivityType, AdditionalText, TransFileName)
   VALUES ( CONCAT(&apos;Testuser&apos;, @testvalue), &apos;20211110&apos;, &apos;090353&apos; , &apos;WEBP&apos;, &apos;85.115.54.201&apos;, &apos;VIEW RESULT SET&apos;, &apos;&apos;, &apos;&apos;);*/
       
   SET @MyCounter = @MyCounter + 1;  
   
END</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_1</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">Insert entries for TUser into HPCUsers, Systemactivitylog and HPCUsersAuth tables</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert temp 10-99 Entries into HPCUsers tables - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DECLARE 
@MyCounter as varchar(100),
@testvalue as varchar(100)

SET @MyCounter = 10 ; 

WHILE @MyCounter &lt; 100
 
 BEGIN
 /*set @testvalue = &apos;&apos;;*/
 IF @MyCounter &gt;= 10  
 set @testvalue = @MyCounter;

  
   INSERT INTO HPCUsers( UserCode, UserName, AltRef, WorkGroupCode, DeviceID, Revoked, LastModDate, LastModTime, UserClass) 
   VALUES ( CONCAT(&apos;Testuser&apos;, @testvalue), CONCAT(&apos;testuser&apos;, @MyCounter), NULL, &apos;Team01-Mob&apos;, NULL, &apos;0&apos;, &apos;20211110&apos;, &apos;090353&apos;, NULL);
   
       
   SET @MyCounter = @MyCounter + 1;  

END</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_1</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">Insert entries for TUser into HPCUsers, Systemactivitylog and HPCUsersAuth tables</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 2 (Request to generate Unique User code Beyond 99)- application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0dXNlciIsCiAgIm5hbWUiOiAidGVzdHVzZXIiLAogICJwaWN0dXJlIjogImh0dHBzOi8vcy5ncmF2YXRhci5jb20vYXZhdGFyLzYxYjYzYmVmNTVjYmRmZTJiOGUwYTVhMzlhMTc0ZjJjP3M9NDgwJnI9cGcmZD1odHRwcyUzQSUyRiUyRmNkbi5hdXRoMC5jb20lMkZhdmF0YXJzJTJGbmkucG5nIiwKICAidXBkYXRlZF9hdCI6ICIyMDIxLTExLTE4VDA2OjE2OjMwLjg2MFoiLAogICJpc3MiOiAiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwKICAic3ViIjogImF1dGgwfDYxMTIzY2QzMHRlMDlzMDA2ODQzMDh0OSIsCiAgImF1ZCI6ICJ0bjQ3bU5PNEo0Z3lTWERHM2JodWMxMW1pWUk1SmduaCIsCiAgImlhdCI6IDE2MzcyMTYxOTQsCiAgImV4cCI6IDE2Mzc1NzYxOTQKfQ==.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated?</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Similar username, usercode and WG as existing with valid id token amd invite token</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${AccJson}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${CTJson}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  false" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1759074127">InvalidUserCode</stringProp>
                <stringProp name="2043712549">Unable to generate a unique user Code</stringProp>
                <stringProp name="97196323">false</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The unique user record was not created.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete the manual and process added details in 3 tables - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from HPCUsersAuth where usercode like &apos;Testuser%&apos;;
delete from HPCUsers where usercode like &apos;Testuser%&apos;;
delete from systemactivitylog where usercode like &apos;Testuser%&apos;;

insert into HPCUsersAuth values ( &apos;Nikitasha&apos;, &apos;auth0|61123cd30ab09a00684308d9&apos;, &apos;https://mcamt.eu.auth0.com/&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_1</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">Delete entries for TUser and TUser1 from HPCUsers, Systemactivitylog and HPCUsersAuth tables</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="select entries from HPCUsers Table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">select usercode from HPCUsers where username like &apos;testuser%&apos;;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_1</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">Select entries for testuser in the HPCUsers table</stringProp>
          </JDBCSampler>
          <hashTree>
            <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion - Error if field is empty (xml)" enabled="true">
              <stringProp name="BeanShellAssertion.query">if (vars.getObject(&quot;Request_1&quot;).size() &gt; 0) {

	FailureMessage = &quot;!!!!!!!!!!! the values have not been deleted !!!!!!!!!!!&quot;;
	Failure = true;	
	prev.setStopThread(true);
	
}</stringProp>
              <stringProp name="BeanShellAssertion.filename"></stringProp>
              <stringProp name="BeanShellAssertion.parameters"></stringProp>
              <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
            </BeanShellAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 3 (New User- Invalid Authentication Request) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
          <stringProp name="TestPlan.comments">invalid Access id and valid id token</stringProp>
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
        </CriticalSectionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 3  (Invalid Authentication request for New User) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIlRlc3RVc2VyMTgxMUBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiNzU2NWU5ODUtOTY1ZC00MmNkLWI0ODYtMWI4YmRkMjk4ODU1IiwiZXhwaXJ5IjoyMDIzMDExMiwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.cINMNQKzRvQrGieBtZekKuJcsI5Y8knxocTeT46GBp1j-hfESB3ViJOfjS68-5k6yWzygEjVPPwadzMJesLOdO67hHjiJ5uR83bgV_6SVgw6RTG1CrZja0_lAY1WIU8Dj-Yy1pvC0ypItSP41MkOTJwh4j_yw3MvGm33YtgT-YXI3vC0ejo6SmPdSx4u4_YkPyHhuy97yy4A3_SGQYGshultzt58ShFweDNWT3I3gi8jQkZf4XIbSW26SC94PMOKzrkSCS61CdP6ME_UQ9l5WzsA0Pe7nK6bW28BJZDIL6M0PJtRhoZETz8rD_Sk9aczQHj7pLk27Epd_tsv2nKFTw&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated?</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, nickname, WG but Invalid Access Token</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eAiOiJKV1QiLCJhbGciOiJub25lIn0.eyJjZmciOnsiYXV0aCI6W3sibG9naW5faGludCI6bnVsbCwiYXV0aG9yaXR5X3VyaSI6bnVsbCwiaWQiOm51bGwsInR5cGUiOm51bGwsImNsaWVudF9pZCI6bnVsbH1dLCJjbGFpbXMiOlt7Indvcmtncm91cCI6IlRlYW0wMS1Nb2IiLCJ0eXBlIjpudWxsfV0sInJlc291cmNlcyI6W3siYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOm51bGx9LHsiYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOiJzZGZzZGY.</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${AccJson}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${CTJson}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Authentication failure</stringProp>
              <stringProp name="Assertion.custom_message">The Authentication of the new user was not verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 4 (New User- Target WG Inactive) - application/vnd.fieldsmart.call-response-1+json" enabled="false">
          <stringProp name="TestPlan.comments">Valid invite , id token but inactive WG</stringProp>
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Update HPCWorkgroups table to set WG to inactive - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;
update HPCWorkGroups set Active= &apos;0&apos; where WorkGroupCode = &apos;WGP1&apos;;

</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 4 (Request for Valid New User, WG Inactive) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjEyMzQiLAogICJuYW1lIjogIlRlc3RVc2VyMTIzNEBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.ewogICJjZmciOiB7CiAgICAiYXV0aCI6IFsKICAgICAgewogICAgICAgICJhdXRob3JpdHlfdXJpIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgICAgICAgImlkIjogImRlZmF1bHQiLAogICAgICAgICJ0eXBlIjogIm9pZGMiLAogICAgICAgICJjbGllbnRfaWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiCiAgICAgIH0KICAgIF0sCiAgICAiY2xhaW1zIjogWwogICAgICB7CiAgICAgICAgIndvcmtncm91cCI6ICJXR1AxIiwKICAgICAgICAiaW52aXRlaWQiOiAiNzU2NWU5ODUtOTY1ZC00MmNkLWI0ODYtMWI4YmRkMjk4ODU1IiwKICAgICAgICAiZXhwaXJ5IjogMjAyMzAxMTIsCiAgICAgICAgInR5cGUiOiAidXNlci9pbmZvIgogICAgICB9CiAgICBdLAogICAgInJlc291cmNlcyI6IFsKICAgICAgewogICAgICAgICJhdXRoIjogWwogICAgICAgICAgImRlZmF1bHQiCiAgICAgICAgXSwKICAgICAgICAidHlwZSI6ICJ0ZW5hbnQiLAogICAgICAgICJ1cmkiOiAiaHR0cHM6Ly9maWVsZHNtYXJ0LXEwMS51a3NvdXRoLmNsb3VkYXBwLmF6dXJlLmNvbS9tb2JpbGUiCiAgICAgIH0KICAgIF0KICB9Cn0=.cINMNQKzRvQrGieBtZekKuJcsI5Y8knxocTeT46GBp1j-hfESB3ViJOfjS68-5k6yWzygEjVPPwadzMJesLOdO67hHjiJ5uR83bgV_6SVgw6RTG1CrZja0_lAY1WIU8Dj-Yy1pvC0ypItSP41MkOTJwh4j_yw3MvGm33YtgT-YXI3vC0ejo6SmPdSx4u4_YkPyHhuy97yy4A3_SGQYGshultzt58ShFweDNWT3I3gi8jQkZf4XIbSW26SC94PMOKzrkSCS61CdP6ME_UQ9l5WzsA0Pe7nK6bW28BJZDIL6M0PJtRhoZETz8rD_Sk9aczQHj7pLk27Epd_tsv2nKFTw&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, nickname but WG is inactive</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${AccJson}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${CTJson}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  200" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1067807720">InvalidWorkgroupException</stringProp>
                <stringProp name="97196323">false</stringProp>
                <stringProp name="-797405632">Target Workgroup is inactive</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Invite token details have not been validated.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="TestPlan.comments">InvalidWorkgroupException</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Update HPCWorkgroups table to set WG to active- application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">update HPCWorkGroups set Active= &apos;1&apos; where WorkGroupCode = &apos;WGP1&apos;;
insert into HPCUsersAuth values ( &apos;Nikitasha&apos;, &apos;auth0|61123cd30ab09a00684308d9&apos;, &apos;https://mcamt.eu.auth0.com/&apos;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Scenario 5 (New User- Similar Usercode) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          <stringProp name="TestPlan.comments">Valid Access id and id token, but a similar user exists in the db</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Insert temp Entries into HPCUsers table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;

insert into HPCUsers( UserCode, UserName, AltRef, WorkGroupCode, DeviceID, Revoked, LastModDate, LastModTime, UserClass) values ( &apos;TUser&apos;, &apos;testuser&apos;, NULL, &apos;Team01-Mob&apos;, NULL, &apos;0&apos;, &apos;20211110&apos;, &apos;090353&apos;, NULL);
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_1</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">Insert entries for TUser into HPCUsers, Systemactivitylog and HPCUsersAuth tables</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="scenario 5 ( New User generation for similar usercode passed) - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUVXNlciIsCiAgIm5hbWUiOiAidGVzdHVzZXIiLAogICJwaWN0dXJlIjogImh0dHBzOi8vcy5ncmF2YXRhci5jb20vYXZhdGFyLzYxYjYzYmVmNTVjYmRmZTJiOGUwYTVhMzlhMTc0ZjJjP3M9NDgwJnI9cGcmZD1odHRwcyUzQSUyRiUyRmNkbi5hdXRoMC5jb20lMkZhdmF0YXJzJTJGbmkucG5nIiwKICAidXBkYXRlZF9hdCI6ICIyMDIxLTExLTE4VDA2OjE2OjMwLjg2MFoiLAogICJpc3MiOiAiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwKICAic3ViIjogImF1dGgwfDYxMTIzY2QzMHRlMDlzMDA2ODQzMDh0OSIsCiAgImF1ZCI6ICJ0bjQ3bU5PNEo0Z3lTWERHM2JodWMxMW1pWUk1SmduaCIsCiAgImlhdCI6IDE2MzcyMTYxOTQsCiAgImV4cCI6IDE2Mzc1NzYxOTQKfQ==.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid Access id and id token, but a similar user exists in the db</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">${AccJson}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${CTJson}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  false" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Similar records were not created.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete the manual and process added details in the table - application/vnd.fieldsmart.call-response-1+json" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;
delete from HPCUsers where UserCode like &apos;TUser%&apos;;

insert into HPCUsersAuth values ( &apos;Nikitasha&apos;, &apos;auth0|61123cd30ab09a00684308d9&apos;, &apos;https://mcamt.eu.auth0.com/&apos;);
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_1</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="TestPlan.comments">Delete entries for TUser and TUser1 from HPCUsers, Systemactivitylog and HPCUsersAuth tables</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/mobile/user/authenticated- success/error Existing User  (application/xml)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Success (Existing User- Valid Authentication Request) - application/xml" enabled="true">
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          <stringProp name="TestPlan.comments">Valid Access id and id token</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Update HPCUsers Valid WG and Revoke Status - application/xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">update HPCUsers set Revoked= &apos;0&apos; where usercode= &apos;Nikitasha&apos;;
update HPCUsers set WorkGroupCode = &apos;Team01-Mob&apos; where UserCode= &apos;Nikitasha&apos; ;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_3</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="success (Request for Valid User/WG) - application/xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
	&lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.eyJuaWNrbmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuIiwibmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuQGNhcGl0YS5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLCJ1cGRhdGVkX2F0IjoiMjAyMS0xMS0xOVQwNzozNTo1MC4zMDhaIiwiaXNzIjoiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjExMjNjZDMwYWIwOWEwMDY4NDMwOGQ5IiwiYXVkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLCJpYXQiOjE2MzczMDczNTIsImV4cCI6MTY2ODg2NDk1Mn0.GYsf3xPLi44G8GJFSANeZM9VRJroE3RkJV0SiXzeUX8H2okiB3njDA_lnldRzsBQWp5Am-bDDU1BgSubvfFMeDI6S1UC6I0etwz7OULQCRe8xpPMQy326WBPb6cbpteWnU-imEGS8oQyxVmD506o8d7kgnX0DzvWG3V7s5fNCZVCcnO-J4vFlNs9jm-BnHUhiF5bYZBWkh2f5pWOmGqvjBe6aXCSih5N0q2Ilvvb0578thlayS7iZMsVuv5si2maft8QbKmFrieh0vYX3t5Y7OEqC5-rnHUMphS6ST7kzPx3hjCuQ0HI2YcobVRXMr3w3iKINtfFwXc_0dj4sXxIkw&lt;/identityToken&gt;&#xd;
	&#xd;
	&lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&lt;/inviteToken&gt;&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid Unrevoked User, nickname and Workgroup with a valid access token.</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  true" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Error (Existing User- Invalid Authentication Request) - application/xml" enabled="true">
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          <stringProp name="TestPlan.comments">invalid Access id and valid id token</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Update HPCUsers Valid WG and Revoke Status - application/xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">update HPCUsers set Revoked= &apos;0&apos; where usercode= &apos;Nikitasha&apos;;
update HPCUsers set WorkGroupCode = &apos;Team01-Mob&apos; where UserCode= &apos;Nikitasha&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_4</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="error (Invalid Authentication Request) - application/xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.eyJuaWNrbmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuIiwibmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuQGNhcGl0YS5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLCJ1cGRhdGVkX2F0IjoiMjAyMS0xMS0wOFQwNTowMzozOS42MTRaIiwiaXNzIjoiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjExMjNjZDMwYWIwOWEwMDY4NDMwOGQ5IiwiYXVkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLCJpYXQiOjE2MzYzNDc4MjIsImV4cCI6MTYzNjcwNzgyMn0.LJSv7GNRHQBNj6MJ5Mdw8OJu9xYn1pYIrqNuZ_NJb4LRGtoIMSL5u5GvkC8_cQ76E3pEweGos7WZi8qMH9Lt6w49BNARqdPisdUiIOOpEKFIc3YMdFCKFde7iCqyszx_vXexmzG3ETwfE8-N5yP2YV7wpbzOcRbOVHFBhs9WLXFYOCu19XJmiJzoRZAWXgqFfluU87oNW4898SpJHm1YX6Gi5dxIQ90aRI_RCY0g6iZtPfm6HEljBgBF7XcFIv9X7rW46-2oWv_dyFjX2-buIZz_h2fClRX1Wt4yDIHzK2XXk3rmlKwviSXyWdjE5PbxTNK6xGriIOWIxxETm9dq3w&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLsImNsaWVudF9pZCI6bnVsbH1dLCJjbGFpbXMiOlt7Indvcmtncm91cCI6IlRlYW0wMS1Nb2IiLCJ0eXBlIjpudWxsfV0sInJlc291cmNlcyI6W3siYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOm51bGx9LHsiYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOiJzZGZzZGYifV19fQoK.&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated?</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid Unrevoked User, nickname and Workgroup with an invalid access token.</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLsImNsaWVudF9pZCI6bnVsbH1dLCJjbGFpbXMiOlt7Indvcmtncm91cCI6IlRlYW0wMS1Nb2IiLCJ0eXBlIjpudWxsfV0sInJlc291cmNlcyI6W3siYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOm51bGx9LHsiYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOiJzZGZzZGYifV19fQoK.</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Authentication failure</stringProp>
              <stringProp name="Assertion.custom_message">The Authentication of the existing user was not verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/mobile/user/authenticated- success/error New User (application/xml)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Success (Valid New User/WG) - application/xml" enabled="true">
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
        </CriticalSectionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-fws-appCode</stringProp>
                <stringProp name="Header.value">WM</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Existing entry in HPCUsersAuth table - application/xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="success (Request for Valid New User/WG) - application/xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIlRlc3RVc2VyMTgxMUBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&#xd;
&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, nickname and WG</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  true" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="TestPlan.comments">Valid Authentication Request ( Pass ) </stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete entries from HPCUsersAuth and HPCUsers table - application/xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;
delete from HPCUsers where Usercode like &apos;TestUser%&apos;;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Error (New User- Invalid Authentication Request) - application/xml" enabled="true">
          <stringProp name="TestPlan.comments">invalid Access id and valid id token</stringProp>
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
        </CriticalSectionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Error (Invalid Authentication request for New User)- application/xml" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&#xd;
&lt;AuthenticationToken&gt;&#xd;
&#xd;
    &lt;identityToken&gt;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIlRlc3RVc2VyMTgxMUBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&lt;/identityToken&gt;&#xd;
&#xd;
    &lt;inviteToken&gt;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&lt;/inviteToken&gt;&#xd;
&#xd;
&lt;/AuthenticationToken&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, nickname, WG but Invalid Access Token</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eAiOiJKV1QiLCJhbGciOiJub25lIn0.eyJjZmciOnsiYXV0aCI6W3sibG9naW5faGludCI6bnVsbCwiYXV0aG9yaXR5X3VyaSI6bnVsbCwiaWQiOm51bGwsInR5cGUiOm51bGwsImNsaWVudF9pZCI6bnVsbH1dLCJjbGFpbXMiOlt7Indvcmtncm91cCI6IlRlYW0wMS1Nb2IiLCJ0eXBlIjpudWxsfV0sInJlc291cmNlcyI6W3siYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOm51bGx9LHsiYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOiJzZGZzZGY.</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Authentication failure</stringProp>
              <stringProp name="Assertion.custom_message">The Authentication of the new user was not verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/mobile/user/authenticated- success/error Existing User (application/json)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Success (Valid Authentication Request) - application/json" enabled="true">
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          <stringProp name="TestPlan.comments">Valid Access id and id token</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Update HPCUsers Valid WG and Revoke Status - application/xml" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">update HPCUsers set Revoked= &apos;0&apos; where usercode= &apos;Nikitasha&apos;;
update HPCUsers set WorkGroupCode = &apos;Team01-Mob&apos; where UserCode= &apos;Nikitasha&apos; ;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_3</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="success (Request for Valid User/WG) - application/json" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.eyJuaWNrbmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuIiwibmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuQGNhcGl0YS5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLCJ1cGRhdGVkX2F0IjoiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwiaXNzIjoiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjExMjNjZDMwYWIwOWEwMDY4NDMwOGQ5IiwiYXVkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLCJpYXQiOjE2MzcyMTYxOTQsImV4cCI6MTYzNzU3NjE5NH0.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid Unrevoked User, nickname and Workgroup with a valid access token.</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  true" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Error (Existing User- Invalid Authentication Request) - application/json" enabled="true">
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
          <stringProp name="TestPlan.comments">invalid Access id and valid id token</stringProp>
        </CriticalSectionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Update HPCUsers Valid WG and Revoke Status - application/json" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">update HPCUsers set Revoked= &apos;0&apos; where usercode= &apos;Nikitasha&apos;;
update HPCUsers set WorkGroupCode = &apos;Team01-Mob&apos; where UserCode= &apos;Nikitasha&apos;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable">Request_4</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="error (Invalid Authentication Request) - application/json" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.eyJuaWNrbmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuIiwibmFtZSI6Im5pa2l0YXNoYS5naXJpeWFuQGNhcGl0YS5jb20iLCJwaWN0dXJlIjoiaHR0cHM6Ly9zLmdyYXZhdGFyLmNvbS9hdmF0YXIvNjFiNjNiZWY1NWNiZGZlMmI4ZTBhNWEzOWExNzRmMmM_cz00ODAmcj1wZyZkPWh0dHBzJTNBJTJGJTJGY2RuLmF1dGgwLmNvbSUyRmF2YXRhcnMlMkZuaS5wbmciLCJ1cGRhdGVkX2F0IjoiMjAyMS0xMS0wOFQwNTowMzozOS42MTRaIiwiaXNzIjoiaHR0cHM6Ly9tY2FtdC5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjExMjNjZDMwYWIwOWEwMDY4NDMwOGQ5IiwiYXVkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLCJpYXQiOjE2MzYzNDc4MjIsImV4cCI6MTYzNjcwNzgyMn0.LJSv7GNRHQBNj6MJ5Mdw8OJu9xYn1pYIrqNuZ_NJb4LRGtoIMSL5u5GvkC8_cQ76E3pEweGos7WZi8qMH9Lt6w49BNARqdPisdUiIOOpEKFIc3YMdFCKFde7iCqyszx_vXexmzG3ETwfE8-N5yP2YV7wpbzOcRbOVHFBhs9WLXFYOCu19XJmiJzoRZAWXgqFfluU87oNW4898SpJHm1YX6Gi5dxIQ90aRI_RCY0g6iZtPfm6HEljBgBF7XcFIv9X7rW46-2oWv_dyFjX2-buIZz_h2fClRX1Wt4yDIHzK2XXk3rmlKwviSXyWdjE5PbxTNK6xGriIOWIxxETm9dq3w&quot;&#xd;
&#xd;
&#xd;
    &quot;inviteToken&quot;:&quot;eyJ0eXAiOiJKV1QiLsImNsaWVudF9pZCI6bnVsbH1dLCJjbGFpbXMiOlt7Indvcmtncm91cCI6IlRlYW0wMS1Nb2IiLCJ0eXBlIjpudWxsfV0sInJlc291cmNlcyI6W3siYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOm51bGx9LHsiYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOiJzZGZzZGYifV19fQoK.&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated?</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid Unrevoked User, nickname and Workgroup with an invalid access token.</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eXAiOiJKV1QiLsImNsaWVudF9pZCI6bnVsbH1dLCJjbGFpbXMiOlt7Indvcmtncm91cCI6IlRlYW0wMS1Nb2IiLCJ0eXBlIjpudWxsfV0sInJlc291cmNlcyI6W3siYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOm51bGx9LHsiYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOiJzZGZzZGYifV19fQoK.</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Authentication failure</stringProp>
              <stringProp name="Assertion.custom_message">The Authentication of the existing user was not verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="/mobile/user/authenticated- success/error New User (application/json)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Success (Valid New User/WG) - application/json" enabled="true">
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
        </CriticalSectionController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${__property(activeuser)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-fws-appCode</stringProp>
                <stringProp name="Header.value">WM</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete Existing entry in HPCUsersAuth table- application/json" enabled="false">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="success (Request for Valid New User/WG) - application/json" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIlRlc3RVc2VyMTgxMUBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiM2M5ODkzYWItMGY3MC00NTJkLTlhYTktZWNmYzkyYmQ2ZDNiIiwiZXhwaXJ5IjoyMDIzMDIwNCwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.gIV8IuGwSVBPohGK6pfFoiQ7U9LKonhUQEIo2ShQNIuYZ8jB7M5uVGQpNTC5ljT2ktZdC4hVo_ftxJBcAtfjR_hCydto_DMPw3aXPrhSy1R5HS6XzJ2scKABIvWp4Xy9aTZZ_5yrdMTXxbKXe7D7_Qbxo92-UDemAYZTwobz5f9uEo_C4envvNn8-0TvoZwYElXO13ly-SJnCywOTc7pumlEDfP2BER-TQXgneeAfeuekUzUEQbz7thIAUThK541suZLbnJH-yD_kkN9-zQo0Bv8qhodjAvz6cDxJfjtuyOa9EoNx2wVQJKFzo6Qbcu9PYpbXNfwbuTAMV-HBS1Vuw&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, nickname and WG</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  true" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="3569038">true</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message">The Authentication details have not be verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="TestPlan.comments">Valid Authentication Request ( Pass ) </stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Delete entries from HPCUsersAuth and HPCUsers table - application/json" enabled="true">
            <stringProp name="dataSource">JDBC_Connection</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">delete from HPCUsersAuth where Subject = &apos;auth0|61123cd30ab09a00684308d9&apos;;
delete from HPCUsers where Usercode like &apos;TestUser%&apos;;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <CriticalSectionController guiclass="CriticalSectionControllerGui" testclass="CriticalSectionController" testname="Error (New User- Invalid Authentication Request)- application/json" enabled="true">
          <stringProp name="TestPlan.comments">invalid Access id and valid id token</stringProp>
          <stringProp name="CriticalSectionController.lockName">global_lock</stringProp>
        </CriticalSectionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="error ( Invalid Authentication request for New User)- application/json" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;identityToken&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjR4dEotLTVCMzU3aW1zNlRoQTF5SiJ9.ewogICJuaWNrbmFtZSI6ICJUZXN0VXNlcjE4MTEiLAogICJuYW1lIjogIlRlc3RVc2VyMTgxMUBjYXBpdGEuY29tIiwKICAicGljdHVyZSI6ICJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci82MWI2M2JlZjU1Y2JkZmUyYjhlMGE1YTM5YTE3NGYyYz9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm5pLnBuZyIsCiAgInVwZGF0ZWRfYXQiOiAiMjAyMS0xMS0xOFQwNjoxNjozMC44NjBaIiwKICAiaXNzIjogImh0dHBzOi8vbWNhbXQuZXUuYXV0aDAuY29tLyIsCiAgInN1YiI6ICJhdXRoMHw2MTEyM2NkMzB0ZTA5czAwNjg0MzA4dDkiLAogICJhdWQiOiAidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgiLAogICJpYXQiOiAxNjM3MjE2MTk0LAogICJleHAiOiAxNjM3NTc2MTk0Cn0=.IxjunhTxiWbxjZ1MytweHzeCxgoGl9KRnBZFWKXiB6dNIN8KFmKoVbAmf0Hi9z4fGdFNanh3cmEigcZq8oyRKnbt_13c_mJgTpd7YIxN5iXNCbuafdW1cAIWPncaZPCZWP1GHBP7FA_9Zf-iqyjr4JJo0Rci2oatzFTV2hZeqgb2CvYGmljW2d5XUNTq92BZoQTWRm_hOKNKbDYZ2hVrCd5-8kcvmZHpVCHrKknjr_EMat2fIDSb6GCkOHCpYs9Hzutt15nLwxDH1POHf-70QDIDPEyd1VPKi0SLBLl0po3iNRonO0baDwMfEAMvO5l63BiJ_-DMMMNX31WmJVo-3g&quot;,&#xd;
  &quot;inviteToken&quot;: &quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJjZmciOnsiYXV0aCI6W3siYXV0aG9yaXR5X3VyaSI6Imh0dHBzOlwvXC9tY2FtdC5ldS5hdXRoMC5jb21cLyIsImlkIjoiZGVmYXVsdCIsInR5cGUiOiJvaWRjIiwiY2xpZW50X2lkIjoidG40N21OTzRKNGd5U1hERzNiaHVjMTFtaVlJNUpnbmgifV0sImNsYWltcyI6W3sid29ya2dyb3VwIjoiVGVhbTAxLU1vYiIsImludml0ZWlkIjoiNzU2NWU5ODUtOTY1ZC00MmNkLWI0ODYtMWI4YmRkMjk4ODU1IiwiZXhwaXJ5IjoyMDIzMDExMiwidHlwZSI6InVzZXJcL2luZm8ifV0sInJlc291cmNlcyI6W3siYXV0aCI6WyJkZWZhdWx0Il0sInR5cGUiOiJ0ZW5hbnQiLCJ1cmkiOiJodHRwczpcL1wvZmllbGRzbWFydC1xMDEudWtzb3V0aC5jbG91ZGFwcC5henVyZS5jb21cL21vYmlsZSJ9XX19.cINMNQKzRvQrGieBtZekKuJcsI5Y8knxocTeT46GBp1j-hfESB3ViJOfjS68-5k6yWzygEjVPPwadzMJesLOdO67hHjiJ5uR83bgV_6SVgw6RTG1CrZja0_lAY1WIU8Dj-Yy1pvC0ypItSP41MkOTJwh4j_yw3MvGm33YtgT-YXI3vC0ejo6SmPdSx4u4_YkPyHhuy97yy4A3_SGQYGshultzt58ShFweDNWT3I3gi8jQkZf4XIbSW26SC94PMOKzrkSCS61CdP6ME_UQ9l5WzsA0Pe7nK6bW28BJZDIL6M0PJtRhoZETz8rD_Sk9aczQHj7pLk27Epd_tsv2nKFTw&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/mobile/user/authenticated?</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Valid User, nickname, WG but Invalid Access Token</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJ0eAiOiJKV1QiLCJhbGciOiJub25lIn0.eyJjZmciOnsiYXV0aCI6W3sibG9naW5faGludCI6bnVsbCwiYXV0aG9yaXR5X3VyaSI6bnVsbCwiaWQiOm51bGwsInR5cGUiOm51bGwsImNsaWVudF9pZCI6bnVsbH1dLCJjbGFpbXMiOlt7Indvcmtncm91cCI6IlRlYW0wMS1Nb2IiLCJ0eXBlIjpudWxsfV0sInJlc291cmNlcyI6W3siYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOm51bGx9LHsiYXV0aCI6bnVsbCwidHlwZSI6InR5cGUiLCJ1cmkiOiJzZGZzZGY.</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-fws-appCode</stringProp>
                  <stringProp name="Header.value">WM</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response :  401" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="51509">401</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Authentication failure</stringProp>
              <stringProp name="Assertion.custom_message">The Authentication of the new user was not verified.</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">true</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
