<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/jdbc
		http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee 
		http://www.springframework.org/schema/jee/spring-jee-4.0.xsd">

	<!-- 
	#################################################################
	#																#
	#			  FIELDREACH INSTANCE CONFIGURATION					#
	#																#
	#################################################################
	-->


	<util:properties id="hibernateProperties">
		<prop key="hibernate.dialect">${hibernate.dialect}</prop>
		<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
		<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
		<prop key="hibernate.hikari.dataSource.cachePrepStmts">true</prop>
		<prop key="hibernate.hikari.dataSource.prepStmtCacheSize">250</prop>
		<prop key="hibernate.hikari.maximumPoolSize">${jdbc.connectionpool.max_size}</prop>
		<prop key="hibernate.hikari.dataSourceClassName">${jdbc.driverClassName}</prop>
		<prop key="hibernate.connection.release_mode">after_transaction</prop>
	</util:properties>
	
	<bean id="hibernateExceptionTranslator" 
		class="org.springframework.orm.hibernate5.HibernateExceptionTranslator"/>
	

	
	<!--
	**********************************************************************
	 DATA SOURCE CONFIGURATION
	**********************************************************************
	
	 Multiple Fieldreach instance configuration is supported. For each
	 instance required an appropriate data source bean must be created
	 and corresponding Hibernaate Session Factory and transaction manager 
	 beans.
	 
	 For each Fieldreach instance copy the bean below and give it a unique
	 id. It is recommended the application identifier that the Fieldreach
	 instance the bean configuration relates to is included in the name. 
	 eg 'fdcFieldreachDataSource' would be a sensible name for a bean
	 configuring a datasource for the 'FDC' instance of Fieldreach.
	 
	 The jdbcUrl, user and password properties of the bean will have to be
	 modified to point to the correct instance. New properties should be 
	 created in the app.properties file.

	**********************************************************************
	-->

     <bean id="defaultDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
    	<constructor-arg>
	    	<bean class="com.zaxxer.hikari.HikariConfig">  
				<property name="driverClassName" value="${jdbc.driverClassName}" />
				<property name="jdbcUrl" value="${default.jdbc.url}" />
				<property name="username" value="${default.jdbc.username}" />
				<property name="password" value="${default.jdbc.password}" />
		    	<property name="maximumPoolSize" value="${jdbc.connectionpool.max_size}" />
		    	<property name="connectionTestQuery" value="select * from softversions" />
				<property name="autoCommit" value="false" />
				<property name="maxLifetime" value="600000" />
				<property name="idleTimeout" value="300000" />
	    	</bean>
    	</constructor-arg>
    </bean>
    
	<!--
	**********************************************************************
	 HIBERNATE SESSION FACTORY CONFIGURATION
	**********************************************************************
		 
	 For each Fieldreach data source copy the bean below and give it a 
	 unique id. It is recommended the application identifier that the
	 Fieldreach instance the bean configuration relates to is included in 
	 the name. eg 'fdcSessionFactory' would be a sensible name for a bean
	 configuring a session factory for the 'FDC' instance of Fieldreach.
	 
	 The 'dataSource' property should be modified to point to the id of
	 the corresponding Fieldreach data source bean configured earlier.
	 
	 For each Hibernate Session Factory configured a corresponding 
	 OpenSessionInViewFilter filter needs to be configured in the web.xml
	 file. This is required to support hibenrates lazy loading of entities.
	 
	**********************************************************************
	-->

	<bean id="defaultSessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="defaultDataSource"/>
		<property name="hibernateProperties" ref="hibernateProperties" />
		<property name="mappingResources" ref="hibernateMappings" />
	</bean>
	
	<!--
	**********************************************************************
	 TRANSACTION MANAGER CONFIGURATION
	**********************************************************************
	
	 Each Hibernate Session Factory configured must have a corresponding 
	 transaction manager configured. 
	 
	 For each Fieldreach Hibernate Session Factory copy the bean below and 
	 give it a unique id. It is recommended the application identifier 
	 that the Fieldreach instance the bean configuration relates to is 
	 included in the name. eg 'fdcTransactionManager' would be a sensible 
	 name for a bean that manages transactions for the 'FDC' instance of 
	 Fieldreach.
	 
	 The 'sessionFactory' property of the bean must also be modified to
	 point to the id of the corresponding Hibernate Session Factory bean
	 that the bean will manage transactions for.
	 
	**********************************************************************
	-->

	<bean id="defaultTransactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="defaultSessionFactory" />
	</bean>	
		
	<!--
	**********************************************************************
	 FIELDREACH 'INSTANCE' CONFIGURATION
	**********************************************************************
	
	 For each Fieldreach instance copy the bean below and give it a unique
	 id. It is recommended the application identifier that the Fieldreach
	 instance the bean configuration relates to is included in the name. 
	 eg 'fdcFieldreachInstance' would be a sensible name for a bean
	 configuring a datasource for the 'FDC' instance of Fieldreach.
	 
	 For each Fieldreach instance we need to connect to we must create a 
	 Fieldreach 'instance' bean that contains a references to the 
	 Hibernate session factory and transactions manager associated with 
	 that instance.
	 
	**********************************************************************
	-->

	<bean id="defaultInstance" class="com.amtsybex.fieldreach.backend.instance.impl.InstanceImpl"
		scope="prototype">
		<property name="sessionFactory" ref="defaultSessionFactory"/>
		<property name="transactionManager" ref="defaultTransactionManager"/>
	</bean>
	
	<!--
	**********************************************************************
	 MAP OF FIELDREACH INSTANCES
	**********************************************************************
	
	 For each Fieldreach instance bean configured above a corresponding 
	 entry must be created in the 'fieldreachInstances' bean below.
	
	 The key must be the application identifier that the configured 
	 Fieldreach instance corresponds to. The value-ref property should
	 point to the id of the Fieldreach instance bean for that instance.
	 
	**********************************************************************
	-->
	
	<util:map id="fieldreachInstances">
		<entry key="default" value-ref="defaultInstance"/>
	</util:map>
	
	
	<!--
	**********************************************************************
	 Fieldreach Instance Management
	**********************************************************************
	-->
	
	<bean id="backendInstanceManager" class="com.amtsybex.fieldreach.backend.instance.impl.InstanceManagerImpl"
		scope="prototype">
		<property name="fieldreachInstances" ref="fieldreachInstances"/>
	</bean>
	
	
	
</beans>