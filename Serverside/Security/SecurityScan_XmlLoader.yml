
# Referenced by pipeline:
#   - https://dev.azure.com/amtsybex1/Mobile/_build?definitionId=735

# This pipeline runs on a weekly schedule. A Devops Notification has been configured to trigger an email in the event that the pipeline fails for any reason.

trigger:
  - none

#schedules:
#- cron: "0 14 * * 6"
#  displayName: Weekly Saturday build at noon UTC
#  branches:
#    include:
#    - develop
#  always: true

pool: FieldSmart TFCloud (Build)

name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

# Take CI artifacts from develop.
# Once develop has been merged into main, then appropriate CI artifacts should be added below so those builds also get scanned,
# (they cannot be added sooner, because the pipeline will error).  See Task #114668.
resources:
  pipelines:
  - pipeline: xmlloader_build_dev
    source: FieldSmart\XmlLoader-CI
    branch: develop

stages:

# Veracode: XmlLoader
- stage: veracode_deploy_xmlloader
  displayName: 'Deploy to Veracode: XmlLoader'
  dependsOn: [] # no dependencies, so this stage can be run in parallel with other stages  
  jobs:
  - job: upload_and_scan_xmlloader
    displayName: 'Upload and scan: XmlLoader (develop)'
    steps:
      # No source code required
      - checkout: none
      # Download artifacts - 
      - download: xmlloader_build_dev
        displayName: Download build artifact ($(resources.pipeline.xmlloader_build_dev.runName))
        artifact: XmlLoader
        patterns: '**/xml-loader.jar'
      - task: Veracode@3
        displayName: Upload and scan
        inputs:
          ConnectionDetailsSelection: 'Endpoint'
          AnalysisService: 'FieldSmart-VeracodeService'
          veracodeAppProfile: 'AMT - FieldSmart'
          version: '{"repo":"Serverside","rev":"$(resources.pipeline.xmlloader_build_dev.sourceCommit)","branch":"$(resources.pipeline.xmlloader_build_dev.sourceBranch)","buildName":"$(build.buildNumber)","app":"xmlloader"}'
          filepath: '$(Pipeline.Workspace)/xmlloader_build_dev/XmlLoader/xml-loader.jar'
          sandboxName: 'FieldSmartServerside.XmlLoader'
          createSandBox: true
          createProfile: false
          failBuildIfUploadAndScanBuildStepFails: true
          importResults: true
          failBuildOnPolicyFail: true
